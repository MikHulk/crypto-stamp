const cryptoStampData = {
  abi: [
    { type: 'constructor', inputs: [], stateMutability: 'nonpayable' },
    {
      type: 'function',
      name: 'approve',
      inputs: [
        { name: 'to', type: 'address', internalType: 'address' },
        { name: 'tokenId', type: 'uint256', internalType: 'uint256' }
      ],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'balanceOf',
      inputs: [ { name: 'owner', type: 'address', internalType: 'address' } ],
      outputs: [ { name: '', type: 'uint256', internalType: 'uint256' } ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'content',
      inputs: [ { name: 'tokenId', type: 'uint256', internalType: 'uint256' } ],
      outputs: [
        {
          name: '',
          type: 'tuple',
          internalType: 'struct Content',
          components: [
            {
              name: 'contentType',
              type: 'uint8',
              internalType: 'enum ContentType'
            },
            { name: 'value', type: 'string', internalType: 'string' }
          ]
        }
      ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'countCosigners',
      inputs: [ { name: 'tokenId', type: 'uint256', internalType: 'uint256' } ],
      outputs: [ { name: '', type: 'uint256', internalType: 'uint256' } ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deriveToken',
      inputs: [
        { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
        { name: 'terms', type: 'string', internalType: 'string' }
      ],
      outputs: [ { name: '', type: 'address', internalType: 'address' } ],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'getApproved',
      inputs: [ { name: 'tokenId', type: 'uint256', internalType: 'uint256' } ],
      outputs: [ { name: '', type: 'address', internalType: 'address' } ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isApprovedForAll',
      inputs: [
        { name: 'owner', type: 'address', internalType: 'address' },
        { name: 'operator', type: 'address', internalType: 'address' }
      ],
      outputs: [ { name: '', type: 'bool', internalType: 'bool' } ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isSigner',
      inputs: [
        { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
        { name: 'candidate', type: 'address', internalType: 'address' }
      ],
      outputs: [ { name: '', type: 'bool', internalType: 'bool' } ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'name',
      inputs: [],
      outputs: [ { name: '', type: 'string', internalType: 'string' } ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'ownerOf',
      inputs: [ { name: 'tokenId', type: 'uint256', internalType: 'uint256' } ],
      outputs: [ { name: '', type: 'address', internalType: 'address' } ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'safeTransferFrom',
      inputs: [
        { name: 'from', type: 'address', internalType: 'address' },
        { name: 'to', type: 'address', internalType: 'address' },
        { name: 'tokenId', type: 'uint256', internalType: 'uint256' }
      ],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'safeTransferFrom',
      inputs: [
        { name: 'from', type: 'address', internalType: 'address' },
        { name: 'to', type: 'address', internalType: 'address' },
        { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
        { name: 'data', type: 'bytes', internalType: 'bytes' }
      ],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'setApprovalForAll',
      inputs: [
        { name: 'operator', type: 'address', internalType: 'address' },
        { name: 'approved', type: 'bool', internalType: 'bool' }
      ],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'sign',
      inputs: [ { name: 'tokenId', type: 'uint256', internalType: 'uint256' } ],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'stampTextContent',
      inputs: [ { name: '_content', type: 'string', internalType: 'string' } ],
      outputs: [ { name: '', type: 'uint256', internalType: 'uint256' } ],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'stampURI',
      inputs: [ { name: '_tokenURI', type: 'string', internalType: 'string' } ],
      outputs: [ { name: '', type: 'uint256', internalType: 'uint256' } ],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'supportsInterface',
      inputs: [
        { name: 'interfaceId', type: 'bytes4', internalType: 'bytes4' }
      ],
      outputs: [ { name: '', type: 'bool', internalType: 'bool' } ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'symbol',
      inputs: [],
      outputs: [ { name: '', type: 'string', internalType: 'string' } ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'tokenText',
      inputs: [ { name: 'tokenId', type: 'uint256', internalType: 'uint256' } ],
      outputs: [ { name: '', type: 'string', internalType: 'string' } ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'tokenURI',
      inputs: [ { name: 'tokenId', type: 'uint256', internalType: 'uint256' } ],
      outputs: [ { name: '', type: 'string', internalType: 'string' } ],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'transferFrom',
      inputs: [
        { name: 'from', type: 'address', internalType: 'address' },
        { name: 'to', type: 'address', internalType: 'address' },
        { name: 'tokenId', type: 'uint256', internalType: 'uint256' }
      ],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'event',
      name: 'Approval',
      inputs: [
        {
          name: 'owner',
          type: 'address',
          indexed: true,
          internalType: 'address'
        },
        {
          name: 'approved',
          type: 'address',
          indexed: true,
          internalType: 'address'
        },
        {
          name: 'tokenId',
          type: 'uint256',
          indexed: true,
          internalType: 'uint256'
        }
      ],
      anonymous: false
    },
    {
      type: 'event',
      name: 'ApprovalForAll',
      inputs: [
        {
          name: 'owner',
          type: 'address',
          indexed: true,
          internalType: 'address'
        },
        {
          name: 'operator',
          type: 'address',
          indexed: true,
          internalType: 'address'
        },
        {
          name: 'approved',
          type: 'bool',
          indexed: false,
          internalType: 'bool'
        }
      ],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BatchMetadataUpdate',
      inputs: [
        {
          name: '_fromTokenId',
          type: 'uint256',
          indexed: false,
          internalType: 'uint256'
        },
        {
          name: '_toTokenId',
          type: 'uint256',
          indexed: false,
          internalType: 'uint256'
        }
      ],
      anonymous: false
    },
    {
      type: 'event',
      name: 'MetadataUpdate',
      inputs: [
        {
          name: '_tokenId',
          type: 'uint256',
          indexed: false,
          internalType: 'uint256'
        }
      ],
      anonymous: false
    },
    {
      type: 'event',
      name: 'Transfer',
      inputs: [
        {
          name: 'from',
          type: 'address',
          indexed: true,
          internalType: 'address'
        },
        {
          name: 'to',
          type: 'address',
          indexed: true,
          internalType: 'address'
        },
        {
          name: 'tokenId',
          type: 'uint256',
          indexed: true,
          internalType: 'uint256'
        }
      ],
      anonymous: false
    },
    {
      type: 'error',
      name: 'ERC721IncorrectOwner',
      inputs: [
        { name: 'sender', type: 'address', internalType: 'address' },
        { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
        { name: 'owner', type: 'address', internalType: 'address' }
      ]
    },
    {
      type: 'error',
      name: 'ERC721InsufficientApproval',
      inputs: [
        { name: 'operator', type: 'address', internalType: 'address' },
        { name: 'tokenId', type: 'uint256', internalType: 'uint256' }
      ]
    },
    {
      type: 'error',
      name: 'ERC721InvalidApprover',
      inputs: [
        { name: 'approver', type: 'address', internalType: 'address' }
      ]
    },
    {
      type: 'error',
      name: 'ERC721InvalidOperator',
      inputs: [
        { name: 'operator', type: 'address', internalType: 'address' }
      ]
    },
    {
      type: 'error',
      name: 'ERC721InvalidOwner',
      inputs: [ { name: 'owner', type: 'address', internalType: 'address' } ]
    },
    {
      type: 'error',
      name: 'ERC721InvalidReceiver',
      inputs: [
        { name: 'receiver', type: 'address', internalType: 'address' }
      ]
    },
    {
      type: 'error',
      name: 'ERC721InvalidSender',
      inputs: [ { name: 'sender', type: 'address', internalType: 'address' } ]
    },
    {
      type: 'error',
      name: 'ERC721NonexistentToken',
      inputs: [ { name: 'tokenId', type: 'uint256', internalType: 'uint256' } ]
    }
  ],
  bytecode: {
    object: '',
    sourceMap: '838:5528:36:-:0;;;1048:46;;;;;;;;;;1381:113:25;;;;;;;;;;;;;-1:-1:-1;;;1381:113:25;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:25;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:25;:17;1480:7;1470;:17;:::i;:::-;;1381:113;;838:5528:36;;14:127:38;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:38;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:38;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:38;;;2571:26;2522:89;-1:-1:-1;;1333:1:38;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:38;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:38;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:38;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:38:o;:::-;838:5528:36;;;;;;',
    linkReferences: {}
  },
  deployedBytecode: {
    object: '',
    sourceMap: '838:5528:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2839:205;;;;;;:::i;:::-;;:::i;:::-;;;565:14:38;;558:22;540:41;;528:2;513:18;2839:205:36;;;;;;;;2365:89:25;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:38;;;1679:51;;1667:2;1652:18;3497:154:25;1533:203:38;3323:113:25;;;;;;:::i;:::-;;:::i;:::-;;4499:468:36;;;;;;:::i;:::-;;:::i;6234:130::-;;;;;;:::i;:::-;6303:7;6333:18;;;:9;:18;;;;;:24;;6234:130;;;;3161:25:38;;;3149:2;3134:18;6234:130:36;3015:177:38;4143:578:25;;;;;;:::i;:::-;;:::i;5290:334:36:-;;;;;;:::i;:::-;;:::i;4787:132:25:-;;;;;;:::i;:::-;;:::i;3237:259:36:-;;;;;;:::i;:::-;;:::i;5891:153::-;;;;;;:::i;:::-;5973:4;6000:18;;;:9;:18;;;;;;;;-1:-1:-1;;;;;6000:37:36;;;;:26;;:37;;;;;;;;5891:153;;;;;1423:345;;;;;;:::i;:::-;;:::i;2185:118:25:-;;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;:::i;:::-;;:::i;2518:93::-;;;:::i;3718:144::-;;;;;;:::i;:::-;;:::i;1941:157:36:-;;;;;;:::i;:::-;;:::i;4985:208:25:-;;;;;;:::i;:::-;;:::i;3684:429:36:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2265:189::-;;;;;;:::i;:::-;;:::i;3928:153:25:-;;;;;;:::i;:::-;;:::i;2839:205:36:-;2974:4;3001:36;3025:11;3001:23;:36::i;:::-;2994:43;2839:205;-1:-1:-1;;2839:205:36:o;2365:89:25:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:25;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:25;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:30;3394:8:25;:35::i;:::-;3323:113;;:::o;4499:468:36:-;4583:7;4632:4;4610:26;;4606:68;;;4650:24;;-1:-1:-1;;;4650:24:36;;8206:2:38;4650:24:36;;;8188:21:38;8245:2;8225:18;;;8218:30;-1:-1:-1;;;8264:18:38;;;8257:44;8318:18;;4650:24:36;;;;;;;;4606:68;4704:10;4684:17;4740:16;4748:7;4740;:16::i;:::-;4724:32;;4766:26;4830:7;4859:5;4887:9;4911:5;;4795:131;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4766:160:36;4499:468;-1:-1:-1;;;;;;;4499:468:36:o;4143:578:25:-;-1:-1:-1;;;;;4237:16:25;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:25;;4306:1;4276:33;;;1679:51:38;1652:18;;4276:33:25;1533:203:38;4233:87:25;4538:21;4562:34;4570:2;4574:7;735:10:30;4562:7:25;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:25;:13;-1:-1:-1;;;;;4610:21:25;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:25;;-1:-1:-1;;;;;9306:15:38;;;4654:50:25;;;9288:34:38;9338:18;;;9331:34;;;9401:15;;9381:18;;;9374:43;9223:18;;4654:50:25;9048:375:38;4606:109:25;4223:498;4143:578;;;:::o;5290:334:36:-;5373:10;5353:16;5361:7;5353;:16::i;:::-;-1:-1:-1;;;;;5353:30:36;;5350:76;;5397:29;;-1:-1:-1;;;5397:29:36;;9630:2:38;5397:29:36;;;9612:21:38;9669:2;9649:18;;;9642:30;-1:-1:-1;;;9688:18:38;;;9681:49;9747:18;;5397:29:36;9428:343:38;5350:76:36;5439:18;;;;:9;:18;;;;;;;;5466:10;5439:38;;:26;;:38;;;;;;;;5436:90;;;5491:35;;-1:-1:-1;;;5491:35:36;;9978:2:38;5491:35:36;;;9960:21:38;10017:2;9997:18;;;9990:30;10056:27;10036:18;;;10029:55;10101:18;;5491:35:36;9776:349:38;5436:90:36;5536:18;;;;:9;:18;;;;;:26;;;;;;:::i;:::-;;;;-1:-1:-1;;5572:18:36;;;;:9;:18;;;;;;;;5599:10;5572:38;;5613:4;5572:26;;;:38;;;;;;:45;;-1:-1:-1;;5572:45:36;;;;;;5290:334::o;4787:132:25:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;3237:259:36:-;3304:7;3327:14;3344:10;3327:27;;3364:13;3382:15;;3380:17;;;;;:::i;:::-;;;;;-1:-1:-1;3380:17:36;-1:-1:-1;3407:20:36;3413:6;3380:17;3407:5;:20::i;:::-;3437:30;3450:5;3457:9;3437:12;:30::i;:::-;3484:5;3237:259;-1:-1:-1;;;3237:259:36:o;1423:345::-;1499:7;1551:3;1526:28;;1522:72;;;1568:26;;-1:-1:-1;;;1568:26:36;;10569:2:38;1568:26:36;;;10551:21:38;10608:2;10588:18;;;10581:30;-1:-1:-1;;;10627:18:38;;;10620:46;10683:18;;1568:26:36;10367:340:38;1522:72:36;1604:14;1621:10;1604:27;;1641:13;1659:15;;1657:17;;;;;:::i;:::-;;;;;-1:-1:-1;1657:17:36;-1:-1:-1;1684:20:36;1690:6;1657:17;1684:5;:20::i;:::-;1714:25;1723:5;1730:8;;1714;:25::i;:::-;1756:5;1423:345;-1:-1:-1;;;;1423:345:36:o;2185:118:25:-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:25;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:25;;2075:1;2048:30;;;1679:51:38;1652:18;;2048:30:25;1533:203:38;2002:87:25;-1:-1:-1;;;;;;2105:16:25;;;;;:9;:16;;;;;;;1920:208::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:30;3836:8:25;3846;3803:18;:52::i;1941:157:36:-;2005:13;2034:22;2048:7;2034:13;:22::i;:::-;-1:-1:-1;2073:18:36;;;;:9;:18;;;;;2066:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:157;;;:::o;4985:208:25:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;3684:429:36:-;-1:-1:-1;;;;;;;;;;;;;;;;;3776:19:36;3798:17;3807:7;3798:8;:17::i;:::-;3776:39;;3825:23;3868:5;3862:19;3885:1;3862:24;3858:181;;-1:-1:-1;3914:15:36;3858:181;;;3966:18;3976:7;3966:9;:18::i;:::-;3958:26;;4012:16;3998:30;;3858:181;4055:51;;;;;;;;4078:11;4055:51;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;4048:58:36;3684:429;-1:-1:-1;;3684:429:36:o;2265:189::-;2388:13;2424:23;2439:7;2424:14;:23::i;3928:153:25:-;-1:-1:-1;;;;;4039:25:25;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;937:207:28:-;1039:4;-1:-1:-1;;;;;;1062:35:28;;-1:-1:-1;;;1062:35:28;;:75;;;1101:36;1125:11;1101:23;:36::i;16138:241:25:-;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:25;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:25;;;;;3161:25:38;;;3134:18;;16309:31:25;3015:177:38;14418:120:25;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:25;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:25;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:25;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:25;;;9157:256;-1:-1:-1;;;;;9427:16:25;;;9423:107;;-1:-1:-1;;;;;9487:13:25;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:25;-1:-1:-1;;;;;9540:21:25;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:25:o;9955:327::-;-1:-1:-1;;;;;10022:16:25;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:25;;10091:1;10061:33;;;1679:51:38;1652:18;;10061:33:25;1533:203:38;10018:87:25;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:25;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:25;;10262:1;10234:31;;;1679:51:38;1652:18;;10234:31:25;1533:203:38;1922:167:28;2013:19;;;;:10;:19;;;;;:31;2035:9;2013:19;:31;:::i;:::-;-1:-1:-1;2059:23:28;;3161:25:38;;;2059:23:28;;3149:2:38;3134:18;2059:23:28;;;;;;;1922:167;;:::o;1100:128:36:-;1192:18;;;;:9;:18;;;;;:29;1213:8;;1192:18;:29;:::i;15591:312:25:-;-1:-1:-1;;;;;15698:22:25;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:25;;-1:-1:-1;;;;;1697:32:38;;15743:31:25;;;1679:51:38;1652:18;;15743:31:25;1533:203:38;15694:91:25;-1:-1:-1;;;;;15794:25:25;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:25;;;;;;;;;;15855:41;;540::38;;;15855::25;;513:18:38;15855:41:25;;;;;;;15591:312;;;:::o;16918:782::-;-1:-1:-1;;;;;17034:14:25;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:25;;-1:-1:-1;;;;;17072:36:25;;;;;:71;;735:10:30;;17123:4:25;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:25;;;;;;;;-1:-1:-1;;17072:71:25;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:25;;-1:-1:-1;;;;;1697:32:38;;17430:25:25;;;1679:51:38;1652:18;;17430:25:25;1533:203:38;17377:293:25;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:25;;-1:-1:-1;;;17190:51:25;17186:130;;17272:25;;-1:-1:-1;;;17272:25:25;;-1:-1:-1;;;;;1697:32:38;;17272:25:25;;;1679:51:38;1652:18;;17272:25:25;1533:203:38;17186:130:25;17144:186;16918:782;;;;:::o;1210:593:28:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;-1:-1:-1;1341:23:28;1367:19;;;:10;:19;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;3250:9:25;;;;;;;;;-1:-1:-1;3250:9:25;;;3174:92;1417:10:28;1396:31;;1506:4;1500:18;1522:1;1500:23;1496:70;;-1:-1:-1;1546:9:28;1210:593;-1:-1:-1;;1210:593:28:o;1496:70::-;1665:23;;:27;1661:95;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;1210:593;;;:::o;1661:95::-;1773:23;1788:7;1773:14;:23::i;1561:300:25:-;1663:4;-1:-1:-1;;;;;;1698:40:25;;-1:-1:-1;;;1698:40:25;;:104;;-1:-1:-1;;;;;;;1754:48:25;;-1:-1:-1;;;1754:48:25;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:32;;;1818:36:25;762:146:32;14720:662:25;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:25;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:25;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:25;:5;-1:-1:-1;;;;;15115:13:25;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:25;;-1:-1:-1;;;;;1697:32:38;;15189:27:25;;;1679:51:38;1652:18;;15189:27:25;1533:203:38;15089:142:25;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:25;15292:5;-1:-1:-1;;;;;15283:28:25;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:25;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:25;-1:-1:-1;;;;;15346:29:25;;;;;;;;;;14720:662::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:25;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:25;;;;;3161:25:38;;;3134:18;;7298:31:25;3015:177:38;7248:186:25;7375:44;;-1:-1:-1;;;7375:44:25;;-1:-1:-1;;;;;15559:32:38;;7375:44:25;;;15541:51:38;15608:18;;;15601:34;;;15514:18;;7375:44:25;15367:274:38;2677:255:25;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;3250:9;;;;;;;;;-1:-1:-1;3250:9:25;;;3174:92;2823:10;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2843:82;2677:255;-1:-1:-1;;;2677:255:25:o;6376:272::-;6479:4;-1:-1:-1;;;;;6514:21:25;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:25;:5;-1:-1:-1;;;;;6552:16:25;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;;6008:7:25;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:25;;;6608:32;;;;6495:146;-1:-1:-1;6376:272:25:o;637:698:31:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:31;-1:-1:-1;794:41:31;-1:-1:-1;955:28:31;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:31;-1:-1:-1;;;1175:2:31;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:31;1010:282;1256:21;-1:-1:-1;1312:6:31;637:698;-1:-1:-1;;;637:698:31:o;12214:916:34:-;12267:7;;-1:-1:-1;;;12342:17:34;;12338:103;;-1:-1:-1;;;12379:17:34;;;-1:-1:-1;12424:2:34;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:34;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:34;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:34;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:34;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:34;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:34:o;-1:-1:-1:-;;;;;;;;:::o;14:131:38:-;-1:-1:-1;;;;;;88:32:38;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:38;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:38;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:38:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:38;;1348:180;-1:-1:-1;1348:180:38:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:38;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:38:o;2178:348::-;2230:8;2240:6;2294:3;2287:4;2279:6;2275:17;2271:27;2261:55;;2312:1;2309;2302:12;2261:55;-1:-1:-1;2335:20:38;;2378:18;2367:30;;2364:50;;;2410:1;2407;2400:12;2364:50;2447:4;2439:6;2435:17;2423:29;;2499:3;2492:4;2483:6;2475;2471:19;2467:30;2464:39;2461:59;;;2516:1;2513;2506:12;2461:59;2178:348;;;;;:::o;2531:479::-;2611:6;2619;2627;2680:2;2668:9;2659:7;2655:23;2651:32;2648:52;;;2696:1;2693;2686:12;2648:52;2732:9;2719:23;2709:33;;2793:2;2782:9;2778:18;2765:32;2820:18;2812:6;2809:30;2806:50;;;2852:1;2849;2842:12;2806:50;2891:59;2942:7;2933:6;2922:9;2918:22;2891:59;:::i;:::-;2531:479;;2969:8;;-1:-1:-1;2865:85:38;;-1:-1:-1;;;;2531:479:38:o;3197:328::-;3274:6;3282;3290;3343:2;3331:9;3322:7;3318:23;3314:32;3311:52;;;3359:1;3356;3349:12;3311:52;3382:29;3401:9;3382:29;:::i;:::-;3372:39;;3430:38;3464:2;3453:9;3449:18;3430:38;:::i;:::-;3420:48;;3515:2;3504:9;3500:18;3487:32;3477:42;;3197:328;;;;;:::o;3530:127::-;3591:10;3586:3;3582:20;3579:1;3572:31;3622:4;3619:1;3612:15;3646:4;3643:1;3636:15;3662:632;3727:5;3757:18;3798:2;3790:6;3787:14;3784:40;;;3804:18;;:::i;:::-;3879:2;3873:9;3847:2;3933:15;;-1:-1:-1;;3929:24:38;;;3955:2;3925:33;3921:42;3909:55;;;3979:18;;;3999:22;;;3976:46;3973:72;;;4025:18;;:::i;:::-;4065:10;4061:2;4054:22;4094:6;4085:15;;4124:6;4116;4109:22;4164:3;4155:6;4150:3;4146:16;4143:25;4140:45;;;4181:1;4178;4171:12;4140:45;4231:6;4226:3;4219:4;4211:6;4207:17;4194:44;4286:1;4279:4;4270:6;4262;4258:19;4254:30;4247:41;;;;3662:632;;;;;:::o;4299:451::-;4368:6;4421:2;4409:9;4400:7;4396:23;4392:32;4389:52;;;4437:1;4434;4427:12;4389:52;4477:9;4464:23;4510:18;4502:6;4499:30;4496:50;;;4542:1;4539;4532:12;4496:50;4565:22;;4618:4;4610:13;;4606:27;-1:-1:-1;4596:55:38;;4647:1;4644;4637:12;4596:55;4670:74;4736:7;4731:2;4718:16;4713:2;4709;4705:11;4670:74;:::i;4755:254::-;4823:6;4831;4884:2;4872:9;4863:7;4859:23;4855:32;4852:52;;;4900:1;4897;4890:12;4852:52;4936:9;4923:23;4913:33;;4965:38;4999:2;4988:9;4984:18;4965:38;:::i;:::-;4955:48;;4755:254;;;;;:::o;5014:411::-;5085:6;5093;5146:2;5134:9;5125:7;5121:23;5117:32;5114:52;;;5162:1;5159;5152:12;5114:52;5202:9;5189:23;5235:18;5227:6;5224:30;5221:50;;;5267:1;5264;5257:12;5221:50;5306:59;5357:7;5348:6;5337:9;5333:22;5306:59;:::i;:::-;5384:8;;5280:85;;-1:-1:-1;5014:411:38;-1:-1:-1;;;;5014:411:38:o;5430:186::-;5489:6;5542:2;5530:9;5521:7;5517:23;5513:32;5510:52;;;5558:1;5555;5548:12;5510:52;5581:29;5600:9;5581:29;:::i;5621:347::-;5686:6;5694;5747:2;5735:9;5726:7;5722:23;5718:32;5715:52;;;5763:1;5760;5753:12;5715:52;5786:29;5805:9;5786:29;:::i;:::-;5776:39;;5865:2;5854:9;5850:18;5837:32;5912:5;5905:13;5898:21;5891:5;5888:32;5878:60;;5934:1;5931;5924:12;5878:60;5957:5;5947:15;;;5621:347;;;;;:::o;5973:667::-;6068:6;6076;6084;6092;6145:3;6133:9;6124:7;6120:23;6116:33;6113:53;;;6162:1;6159;6152:12;6113:53;6185:29;6204:9;6185:29;:::i;:::-;6175:39;;6233:38;6267:2;6256:9;6252:18;6233:38;:::i;:::-;6223:48;;6318:2;6307:9;6303:18;6290:32;6280:42;;6373:2;6362:9;6358:18;6345:32;6400:18;6392:6;6389:30;6386:50;;;6432:1;6429;6422:12;6386:50;6455:22;;6508:4;6500:13;;6496:27;-1:-1:-1;6486:55:38;;6537:1;6534;6527:12;6486:55;6560:74;6626:7;6621:2;6608:16;6603:2;6599;6595:11;6560:74;:::i;:::-;6550:84;;;5973:667;;;;;;;:::o;6645:127::-;6706:10;6701:3;6697:20;6694:1;6687:31;6737:4;6734:1;6727:15;6761:4;6758:1;6751:15;6777:572;6958:2;6947:9;6940:21;6921:4;6986:6;6980:13;7019:1;7015:2;7012:9;7002:140;;7064:10;7059:3;7055:20;7052:1;7045:31;7099:4;7096:1;7089:15;7127:4;7124:1;7117:15;7002:140;7178:2;7173;7162:9;7158:18;7151:30;;7228:2;7220:6;7216:15;7210:22;7270:4;7263;7252:9;7248:20;7241:34;7292:51;7339:2;7328:9;7324:18;7310:12;7292:51;:::i;7354:260::-;7422:6;7430;7483:2;7471:9;7462:7;7458:23;7454:32;7451:52;;;7499:1;7496;7489:12;7451:52;7522:29;7541:9;7522:29;:::i;:::-;7512:39;;7570:38;7604:2;7593:9;7589:18;7570:38;:::i;7619:380::-;7698:1;7694:12;;;;7741;;;7762:61;;7816:4;7808:6;7804:17;7794:27;;7762:61;7869:2;7861:6;7858:14;7838:18;7835:38;7832:161;;7915:10;7910:3;7906:20;7903:1;7896:31;7950:4;7947:1;7940:15;7978:4;7975:1;7968:15;7832:161;;7619:380;;;:::o;8347:696::-;8604:25;;;-1:-1:-1;;;;;8703:15:38;;;8698:2;8683:18;;8676:43;8755:15;;8750:2;8735:18;;8728:43;8807:3;8802:2;8787:18;;8780:31;;;8827:19;;8820:35;;;8585:4;8848:6;8898;8656:3;8877:19;;8864:49;8963:1;8957:3;8948:6;8937:9;8933:22;8929:32;8922:43;9033:3;9026:2;9022:7;9017:2;9009:6;9005:15;9001:29;8990:9;8986:45;8982:55;8974:63;;8347:696;;;;;;;;:::o;10130:232::-;10169:3;10190:17;;;10187:140;;10249:10;10244:3;10240:20;10237:1;10230:31;10284:4;10281:1;10274:15;10312:4;10309:1;10302:15;10187:140;-1:-1:-1;10354:1:38;10343:13;;10130:232::o;10838:543::-;10940:2;10935:3;10932:11;10929:446;;;10976:1;11000:5;10997:1;10990:16;11044:4;11041:1;11031:18;11114:2;11102:10;11098:19;11095:1;11091:27;11085:4;11081:38;11150:4;11138:10;11135:20;11132:47;;;-1:-1:-1;11173:4:38;11132:47;11228:2;11223:3;11219:12;11216:1;11212:20;11206:4;11202:31;11192:41;;11283:82;11301:2;11294:5;11291:13;11283:82;;;11346:17;;;11327:1;11316:13;11283:82;;;11287:3;;;10838:543;;;:::o;11557:1345::-;11683:3;11677:10;11710:18;11702:6;11699:30;11696:56;;;11732:18;;:::i;:::-;11761:97;11851:6;11811:38;11843:4;11837:11;11811:38;:::i;:::-;11805:4;11761:97;:::i;:::-;11913:4;;11970:2;11959:14;;11987:1;11982:663;;;;12689:1;12706:6;12703:89;;;-1:-1:-1;12758:19:38;;;12752:26;12703:89;-1:-1:-1;;11514:1:38;11510:11;;;11506:24;11502:29;11492:40;11538:1;11534:11;;;11489:57;12805:81;;11952:944;;11982:663;10785:1;10778:14;;;10822:4;10809:18;;-1:-1:-1;;12018:20:38;;;12136:236;12150:7;12147:1;12144:14;12136:236;;;12239:19;;;12233:26;12218:42;;12331:27;;;;12299:1;12287:14;;;;12166:19;;12136:236;;;12140:3;12400:6;12391:7;12388:19;12385:201;;;12461:19;;;12455:26;-1:-1:-1;;12544:1:38;12540:14;;;12556:3;12536:24;12532:37;12528:42;12513:58;12498:74;;12385:201;-1:-1:-1;;;;;12632:1:38;12616:14;;;12612:22;12599:36;;-1:-1:-1;11557:1345:38:o;12907:1206::-;13031:18;13026:3;13023:27;13020:53;;;13053:18;;:::i;:::-;13082:94;13172:3;13132:38;13164:4;13158:11;13132:38;:::i;:::-;13126:4;13082:94;:::i;:::-;13202:1;13227:2;13222:3;13219:11;13244:1;13239:616;;;;13899:1;13916:3;13913:93;;;-1:-1:-1;13972:19:38;;;13959:33;13913:93;-1:-1:-1;;11514:1:38;11510:11;;;11506:24;11502:29;11492:40;11538:1;11534:11;;;11489:57;14019:78;;13212:895;;13239:616;10785:1;10778:14;;;10822:4;10809:18;;-1:-1:-1;;13275:17:38;;;13376:9;13398:229;13412:7;13409:1;13406:14;13398:229;;;13501:19;;;13488:33;13473:49;;13608:4;13593:20;;;;13561:1;13549:14;;;;13428:12;13398:229;;;13402:3;13655;13646:7;13643:16;13640:159;;;13779:1;13775:6;13769:3;13763;13760:1;13756:11;13752:21;13748:34;13744:39;13731:9;13726:3;13722:19;13709:33;13705:79;13697:6;13690:95;13640:159;;;13842:1;13836:3;13833:1;13829:11;13825:19;13819:4;13812:33;13212:895;;12907:1206;;;:::o;14118:489::-;-1:-1:-1;;;;;14387:15:38;;;14369:34;;14439:15;;14434:2;14419:18;;14412:43;14486:2;14471:18;;14464:34;;;14534:3;14529:2;14514:18;;14507:31;;;14312:4;;14555:46;;14581:19;;14573:6;14555:46;:::i;:::-;14547:54;14118:489;-1:-1:-1;;;;;;14118:489:38:o;14612:249::-;14681:6;14734:2;14722:9;14713:7;14709:23;14705:32;14702:52;;;14750:1;14747;14740:12;14702:52;14782:9;14776:16;14801:30;14825:5;14801:30;:::i;14866:496::-;15045:3;15083:6;15077:13;15099:66;15158:6;15153:3;15146:4;15138:6;15134:17;15099:66;:::i;:::-;15228:13;;15187:16;;;;15250:70;15228:13;15187:16;15297:4;15285:17;;15250:70;:::i;:::-;15336:20;;14866:496;-1:-1:-1;;;;14866:496:38:o',
    linkReferences: {}
  },
  methodIdentifiers: {
    'approve(address,uint256)': '095ea7b3',
    'balanceOf(address)': '70a08231',
    'content(uint256)': 'baa0b806',
    'countCosigners(uint256)': '14257ff5',
    'deriveToken(uint256,string)': '0d6314df',
    'getApproved(uint256)': '081812fc',
    'isApprovedForAll(address,address)': 'e985e9c5',
    'isSigner(uint256,address)': '48bcbd2d',
    'name()': '06fdde03',
    'ownerOf(uint256)': '6352211e',
    'safeTransferFrom(address,address,uint256)': '42842e0e',
    'safeTransferFrom(address,address,uint256,bytes)': 'b88d4fde',
    'setApprovalForAll(address,bool)': 'a22cb465',
    'sign(uint256)': '2fb1b25f',
    'stampTextContent(string)': '57a656c9',
    'stampURI(string)': '486f5fd5',
    'supportsInterface(bytes4)': '01ffc9a7',
    'symbol()': '95d89b41',
    'tokenText(uint256)': 'b6e521d5',
    'tokenURI(uint256)': 'c87b56dd',
    'transferFrom(address,address,uint256)': '23b872dd'
  },
  rawMetadata: '{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"content","outputs":[{"components":[{"internalType":"enum ContentType","name":"contentType","type":"uint8"},{"internalType":"string","name":"value","type":"string"}],"internalType":"struct Content","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"countCosigners","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"terms","type":"string"}],"name":"deriveToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"candidate","type":"address"}],"name":"isSigner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"sign","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_content","type":"string"}],"name":"stampTextContent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_tokenURI","type":"string"}],"name":"stampURI","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenText","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Micka\\u00ebl Viey","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can\'t be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"BatchMetadataUpdate(uint256,uint256)":{"details":"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."},"MetadataUpdate(uint256)":{"details":"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"content(uint256)":{"params":{"tokenId":"The tokenID to which the Content is bound"},"returns":{"_0":"the Content(CID or Text) bound to the token."}},"countCosigners(uint256)":{"params":{"tokenId":"The tokenID to which the Content is bound"},"returns":{"_0":"the number of cosigner for this token"}},"deriveToken(uint256,string)":{"details":"see the `DerivativeProduct` contract.","params":{"terms":"explain how the content will be used","tokenId":"The tokenID to which the Content is bound"},"returns":{"_0":"the adress of the new contract."}},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"isSigner(uint256,address)":{"params":{"candidate":"The address to be checked","tokenId":"The tokenID to which the Content is bound"},"returns":{"_0":"true if the address is cosigner"}},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"sign(uint256)":{"params":{"tokenId":"The tokenID to sign."}},"stampTextContent(string)":{"params":{"_content":"the content to stamp."},"returns":{"_0":"the new minted tokenID"}},"stampURI(string)":{"params":{"_tokenURI":"the CID to stamp."},"returns":{"_0":"the new minted tokenID"}},"supportsInterface(bytes4)":{"details":"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.","params":{"interfaceId":"The interface identifier, as specified in ERC-165"},"returns":{"_0":"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise "}},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenText(uint256)":{"params":{"tokenId":"The tokenID to which the content is bound"},"returns":{"_0":"the text bound to the token."}},"tokenURI(uint256)":{"params":{"tokenId":"The tokenID to which the CID is bound"},"returns":{"_0":"the CID bound to the token."}},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"title":"CryptoStamp smart contract.","version":1},"userdoc":{"kind":"user","methods":{"content(uint256)":{"notice":"get content bound to a specific tokenID"},"countCosigners(uint256)":{"notice":"Query the number of cosigner of a specific token"},"isSigner(uint256,address)":{"notice":"Query if an address is cosigner of the content bound to a specific token"},"sign(uint256)":{"notice":"authorizes a third party to sign the token, increasing the authenticity of the content. This also makes it possible to draw up a written contract between two or more parties, enabling, for example, an agreement to pay debts."},"stampTextContent(string)":{"notice":"stamps a short text (<256 char.) minting a token and saving it on this contract"},"stampURI(string)":{"notice":"stamps a CID on IPFS storage, minting a token and saving it on this contract"},"supportsInterface(bytes4)":{"notice":"Query if a contract implements an interface"},"tokenText(uint256)":{"notice":"get the text corresponding to this token"},"tokenURI(uint256)":{"notice":"Get the CID corresponding to this token"}},"notice":"An ERC-721 contract aimed at protecting a writtng with an NFT on the blockchain.","version":1}},"settings":{"compilationTarget":{"src/CryptoStamp.sol":"CryptoStamp"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":ds-test/=lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/"]},"sources":{"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol":{"keccak256":"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724","license":"MIT","urls":["bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a","dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"]},"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol":{"keccak256":"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44","license":"MIT","urls":["bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd","dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc"]},"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol":{"keccak256":"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d","license":"MIT","urls":["bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b","dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"]},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7","license":"MIT","urls":["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f","dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"]},"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol":{"keccak256":"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784","license":"MIT","urls":["bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd","dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4","license":"MIT","urls":["bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7","dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49","license":"MIT","urls":["bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22","dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"keccak256":"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670","license":"MIT","urls":["bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96","dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1","license":"MIT","urls":["bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02","dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","license":"MIT","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"]},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","license":"MIT","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"]},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"keccak256":"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133","license":"MIT","urls":["bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8","dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"]},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b","license":"MIT","urls":["bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df","dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"]},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","license":"MIT","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"]},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","license":"MIT","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"]},"src/CryptoStamp.sol":{"keccak256":"0x0baf08d1c1042307f3d3b7af11d29f4d4466f82aa5db7ae8265b56249a185925","license":"MIT","urls":["bzz-raw://d8cee7bc78d2723869bed83479e67c88c6a46e91f53edd0470e556924c7d6f6c","dweb:/ipfs/QmfPoCvjGF24z3vpLdtQuarPXYLvDdpoFvAC7rMGmQbJPd"]}},"version":1}',
  metadata: {
    compiler: { version: '0.8.23+commit.f704f362' },
    language: 'Solidity',
    output: {
      abi: [
        {
          inputs: [],
          stateMutability: 'nonpayable',
          type: 'constructor'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'sender',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            },
            { internalType: 'address', name: 'owner', type: 'address' }
          ],
          type: 'error',
          name: 'ERC721IncorrectOwner'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          type: 'error',
          name: 'ERC721InsufficientApproval'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'approver',
              type: 'address'
            }
          ],
          type: 'error',
          name: 'ERC721InvalidApprover'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            }
          ],
          type: 'error',
          name: 'ERC721InvalidOperator'
        },
        {
          inputs: [
            { internalType: 'address', name: 'owner', type: 'address' }
          ],
          type: 'error',
          name: 'ERC721InvalidOwner'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'receiver',
              type: 'address'
            }
          ],
          type: 'error',
          name: 'ERC721InvalidReceiver'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'sender',
              type: 'address'
            }
          ],
          type: 'error',
          name: 'ERC721InvalidSender'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          type: 'error',
          name: 'ERC721NonexistentToken'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
              indexed: true
            },
            {
              internalType: 'address',
              name: 'approved',
              type: 'address',
              indexed: true
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
              indexed: true
            }
          ],
          type: 'event',
          name: 'Approval',
          anonymous: false
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
              indexed: true
            },
            {
              internalType: 'address',
              name: 'operator',
              type: 'address',
              indexed: true
            },
            {
              internalType: 'bool',
              name: 'approved',
              type: 'bool',
              indexed: false
            }
          ],
          type: 'event',
          name: 'ApprovalForAll',
          anonymous: false
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: '_fromTokenId',
              type: 'uint256',
              indexed: false
            },
            {
              internalType: 'uint256',
              name: '_toTokenId',
              type: 'uint256',
              indexed: false
            }
          ],
          type: 'event',
          name: 'BatchMetadataUpdate',
          anonymous: false
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: '_tokenId',
              type: 'uint256',
              indexed: false
            }
          ],
          type: 'event',
          name: 'MetadataUpdate',
          anonymous: false
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address',
              indexed: true
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
              indexed: true
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
              indexed: true
            }
          ],
          type: 'event',
          name: 'Transfer',
          anonymous: false
        },
        {
          inputs: [
            { internalType: 'address', name: 'to', type: 'address' },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'approve'
        },
        {
          inputs: [
            { internalType: 'address', name: 'owner', type: 'address' }
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'balanceOf',
          outputs: [ { internalType: 'uint256', name: '', type: 'uint256' } ]
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'content',
          outputs: [
            {
              internalType: 'struct Content',
              name: '',
              type: 'tuple',
              components: [
                {
                  internalType: 'enum ContentType',
                  name: 'contentType',
                  type: 'uint8'
                },
                {
                  internalType: 'string',
                  name: 'value',
                  type: 'string'
                }
              ]
            }
          ]
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'countCosigners',
          outputs: [ { internalType: 'uint256', name: '', type: 'uint256' } ]
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            },
            { internalType: 'string', name: 'terms', type: 'string' }
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'deriveToken',
          outputs: [ { internalType: 'address', name: '', type: 'address' } ]
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'getApproved',
          outputs: [ { internalType: 'address', name: '', type: 'address' } ]
        },
        {
          inputs: [
            { internalType: 'address', name: 'owner', type: 'address' },
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'isApprovedForAll',
          outputs: [ { internalType: 'bool', name: '', type: 'bool' } ]
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            },
            {
              internalType: 'address',
              name: 'candidate',
              type: 'address'
            }
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'isSigner',
          outputs: [ { internalType: 'bool', name: '', type: 'bool' } ]
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'name',
          outputs: [ { internalType: 'string', name: '', type: 'string' } ]
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'ownerOf',
          outputs: [ { internalType: 'address', name: '', type: 'address' } ]
        },
        {
          inputs: [
            { internalType: 'address', name: 'from', type: 'address' },
            { internalType: 'address', name: 'to', type: 'address' },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'safeTransferFrom'
        },
        {
          inputs: [
            { internalType: 'address', name: 'from', type: 'address' },
            { internalType: 'address', name: 'to', type: 'address' },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            },
            { internalType: 'bytes', name: 'data', type: 'bytes' }
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'safeTransferFrom'
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address'
            },
            { internalType: 'bool', name: 'approved', type: 'bool' }
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setApprovalForAll'
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'sign'
        },
        {
          inputs: [
            {
              internalType: 'string',
              name: '_content',
              type: 'string'
            }
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'stampTextContent',
          outputs: [ { internalType: 'uint256', name: '', type: 'uint256' } ]
        },
        {
          inputs: [
            {
              internalType: 'string',
              name: '_tokenURI',
              type: 'string'
            }
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'stampURI',
          outputs: [ { internalType: 'uint256', name: '', type: 'uint256' } ]
        },
        {
          inputs: [
            {
              internalType: 'bytes4',
              name: 'interfaceId',
              type: 'bytes4'
            }
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'supportsInterface',
          outputs: [ { internalType: 'bool', name: '', type: 'bool' } ]
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'symbol',
          outputs: [ { internalType: 'string', name: '', type: 'string' } ]
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'tokenText',
          outputs: [ { internalType: 'string', name: '', type: 'string' } ]
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'tokenURI',
          outputs: [ { internalType: 'string', name: '', type: 'string' } ]
        },
        {
          inputs: [
            { internalType: 'address', name: 'from', type: 'address' },
            { internalType: 'address', name: 'to', type: 'address' },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256'
            }
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'transferFrom'
        }
      ],
      devdoc: {
        kind: 'dev',
        methods: {
          'approve(address,uint256)': { details: 'See {IERC721-approve}.' },
          'balanceOf(address)': { details: 'See {IERC721-balanceOf}.' },
          'content(uint256)': {
            params: { tokenId: 'The tokenID to which the Content is bound' },
            returns: { _0: 'the Content(CID or Text) bound to the token.' }
          },
          'countCosigners(uint256)': {
            params: { tokenId: 'The tokenID to which the Content is bound' },
            returns: { _0: 'the number of cosigner for this token' }
          },
          'deriveToken(uint256,string)': {
            details: 'see the `DerivativeProduct` contract.',
            params: {
              terms: 'explain how the content will be used',
              tokenId: 'The tokenID to which the Content is bound'
            },
            returns: { _0: 'the adress of the new contract.' }
          },
          'getApproved(uint256)': { details: 'See {IERC721-getApproved}.' },
          'isApprovedForAll(address,address)': { details: 'See {IERC721-isApprovedForAll}.' },
          'isSigner(uint256,address)': {
            params: {
              candidate: 'The address to be checked',
              tokenId: 'The tokenID to which the Content is bound'
            },
            returns: { _0: 'true if the address is cosigner' }
          },
          'name()': { details: 'See {IERC721Metadata-name}.' },
          'ownerOf(uint256)': { details: 'See {IERC721-ownerOf}.' },
          'safeTransferFrom(address,address,uint256)': { details: 'See {IERC721-safeTransferFrom}.' },
          'safeTransferFrom(address,address,uint256,bytes)': { details: 'See {IERC721-safeTransferFrom}.' },
          'setApprovalForAll(address,bool)': { details: 'See {IERC721-setApprovalForAll}.' },
          'sign(uint256)': { params: { tokenId: 'The tokenID to sign.' } },
          'stampTextContent(string)': {
            params: { _content: 'the content to stamp.' },
            returns: { _0: 'the new minted tokenID' }
          },
          'stampURI(string)': {
            params: { _tokenURI: 'the CID to stamp.' },
            returns: { _0: 'the new minted tokenID' }
          },
          'supportsInterface(bytes4)': {
            details: 'Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.',
            params: {
              interfaceId: 'The interface identifier, as specified in ERC-165'
            },
            returns: {
              _0: '`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise '
            }
          },
          'symbol()': { details: 'See {IERC721Metadata-symbol}.' },
          'tokenText(uint256)': {
            params: { tokenId: 'The tokenID to which the content is bound' },
            returns: { _0: 'the text bound to the token.' }
          },
          'tokenURI(uint256)': {
            params: { tokenId: 'The tokenID to which the CID is bound' },
            returns: { _0: 'the CID bound to the token.' }
          },
          'transferFrom(address,address,uint256)': { details: 'See {IERC721-transferFrom}.' }
        },
        version: 1
      },
      userdoc: {
        kind: 'user',
        methods: {
          'content(uint256)': { notice: 'get content bound to a specific tokenID' },
          'countCosigners(uint256)': {
            notice: 'Query the number of cosigner of a specific token'
          },
          'isSigner(uint256,address)': {
            notice: 'Query if an address is cosigner of the content bound to a specific token'
          },
          'sign(uint256)': {
            notice: 'authorizes a third party to sign the token, increasing the authenticity of the content. This also makes it possible to draw up a written contract between two or more parties, enabling, for example, an agreement to pay debts.'
          },
          'stampTextContent(string)': {
            notice: 'stamps a short text (<256 char.) minting a token and saving it on this contract'
          },
          'stampURI(string)': {
            notice: 'stamps a CID on IPFS storage, minting a token and saving it on this contract'
          },
          'supportsInterface(bytes4)': { notice: 'Query if a contract implements an interface' },
          'tokenText(uint256)': { notice: 'get the text corresponding to this token' },
          'tokenURI(uint256)': { notice: 'Get the CID corresponding to this token' }
        },
        version: 1
      }
    },
    settings: {
      remappings: [
        '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
        'ds-test/=lib/forge-std/lib/ds-test/src/',
        'erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/',
        'forge-std/=lib/forge-std/src/',
        'openzeppelin-contracts/=lib/openzeppelin-contracts/'
      ],
      optimizer: { enabled: true, runs: 200 },
      metadata: { bytecodeHash: 'ipfs' },
      compilationTarget: { 'src/CryptoStamp.sol': 'CryptoStamp' },
      libraries: {}
    },
    sources: {
      'lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol': {
        keccak256: '0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724',
        urls: [
          'bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a',
          'dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol': {
        keccak256: '0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44',
        urls: [
          'bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd',
          'dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol': {
        keccak256: '0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d',
        urls: [
          'bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b',
          'dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol': {
        keccak256: '0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7',
        urls: [
          'bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f',
          'dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol': {
        keccak256: '0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784',
        urls: [
          'bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd',
          'dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol': {
        keccak256: '0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4',
        urls: [
          'bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7',
          'dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol': {
        keccak256: '0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49',
        urls: [
          'bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22',
          'dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol': {
        keccak256: '0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670',
        urls: [
          'bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96',
          'dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol': {
        keccak256: '0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1',
        urls: [
          'bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02',
          'dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/utils/Context.sol': {
        keccak256: '0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2',
        urls: [
          'bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12',
          'dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/utils/Strings.sol': {
        keccak256: '0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792',
        urls: [
          'bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453',
          'dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol': {
        keccak256: '0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133',
        urls: [
          'bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8',
          'dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
        keccak256: '0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b',
        urls: [
          'bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df',
          'dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
        keccak256: '0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d',
        urls: [
          'bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875',
          'dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L'
        ],
        license: 'MIT'
      },
      'lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol': {
        keccak256: '0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72',
        urls: [
          'bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc',
          'dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT'
        ],
        license: 'MIT'
      },
      'src/CryptoStamp.sol': {
        keccak256: '0x0baf08d1c1042307f3d3b7af11d29f4d4466f82aa5db7ae8265b56249a185925',
        urls: [
          'bzz-raw://d8cee7bc78d2723869bed83479e67c88c6a46e91f53edd0470e556924c7d6f6c',
          'dweb:/ipfs/QmfPoCvjGF24z3vpLdtQuarPXYLvDdpoFvAC7rMGmQbJPd'
        ],
        license: 'MIT'
      }
    },
    version: 1
  },
  ast: {
    absolutePath: 'src/CryptoStamp.sol',
    id: 48527,
    exportedSymbols: {
      Content: [ 47939 ],
      ContentType: [ 47932 ],
      Context: [ 46474 ],
      ContractStatus: [ 48301 ],
      Cosigners: [ 47947 ],
      CryptoStamp: [ 48296 ],
      DerivativeProduct: [ 48526 ],
      ERC165: [ 46753 ],
      ERC721: [ 46155 ],
      ERC721URIStorage: [ 46416 ],
      IERC165: [ 46765 ],
      IERC4906: [ 44927 ],
      IERC721: [ 46272 ],
      IERC721Errors: [ 45021 ],
      IERC721Metadata: [ 46444 ],
      IERC721Receiver: [ 46290 ],
      Strings: [ 46729 ]
    },
    nodeType: 'SourceUnit',
    src: '32:9067:36',
    nodes: [
      {
        id: 47926,
        nodeType: 'PragmaDirective',
        src: '32:24:36',
        nodes: [],
        literals: [ 'solidity', '^', '0.8', '.20' ]
      },
      {
        id: 47927,
        nodeType: 'ImportDirective',
        src: '58:57:36',
        nodes: [],
        absolutePath: 'lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol',
        file: '@openzeppelin/contracts/token/ERC721/ERC721.sol',
        nameLocation: '-1:-1:-1',
        scope: 48527,
        sourceUnit: 46156,
        symbolAliases: [],
        unitAlias: ''
      },
      {
        id: 47928,
        nodeType: 'ImportDirective',
        src: '116:78:36',
        nodes: [],
        absolutePath: 'lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol',
        file: '@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol',
        nameLocation: '-1:-1:-1',
        scope: 48527,
        sourceUnit: 46417,
        symbolAliases: [],
        unitAlias: ''
      },
      {
        id: 47932,
        nodeType: 'EnumDefinition',
        src: '291:38:36',
        nodes: [],
        canonicalName: 'ContentType',
        documentation: {
          id: 47929,
          nodeType: 'StructuredDocumentation',
          src: '196:95:36',
          text: '@title ContentType\n' +
            ' @notice represents the content type stamped in CryptoStamp contract'
        },
        members: [
          {
            id: 47930,
            name: 'Text',
            nameLocation: '314:4:36',
            nodeType: 'EnumValue',
            src: '314:4:36'
          },
          {
            id: 47931,
            name: 'URI',
            nameLocation: '324:3:36',
            nodeType: 'EnumValue',
            src: '324:3:36'
          }
        ],
        name: 'ContentType',
        nameLocation: '296:11:36'
      },
      {
        id: 47939,
        nodeType: 'StructDefinition',
        src: '418:65:36',
        nodes: [],
        canonicalName: 'Content',
        documentation: {
          id: 47933,
          nodeType: 'StructuredDocumentation',
          src: '335:83:36',
          text: '@title Content\n' +
            ' @notice Represent a content stamped in CryptoStamp contract'
        },
        members: [
          {
            constant: false,
            id: 47936,
            mutability: 'mutable',
            name: 'contentType',
            nameLocation: '451:11:36',
            nodeType: 'VariableDeclaration',
            scope: 47939,
            src: '439:23:36',
            stateVariable: false,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_enum$_ContentType_$47932',
              typeString: 'enum ContentType'
            },
            typeName: {
              id: 47935,
              nodeType: 'UserDefinedTypeName',
              pathNode: {
                id: 47934,
                name: 'ContentType',
                nameLocations: [ '439:11:36' ],
                nodeType: 'IdentifierPath',
                referencedDeclaration: 47932,
                src: '439:11:36'
              },
              referencedDeclaration: 47932,
              src: '439:11:36',
              typeDescriptions: {
                typeIdentifier: 't_enum$_ContentType_$47932',
                typeString: 'enum ContentType'
              }
            },
            visibility: 'internal'
          },
          {
            constant: false,
            id: 47938,
            mutability: 'mutable',
            name: 'value',
            nameLocation: '475:5:36',
            nodeType: 'VariableDeclaration',
            scope: 47939,
            src: '468:12:36',
            stateVariable: false,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_string_storage_ptr',
              typeString: 'string'
            },
            typeName: {
              id: 47937,
              name: 'string',
              nodeType: 'ElementaryTypeName',
              src: '468:6:36',
              typeDescriptions: {
                typeIdentifier: 't_string_storage_ptr',
                typeString: 'string'
              }
            },
            visibility: 'internal'
          }
        ],
        name: 'Content',
        nameLocation: '425:7:36',
        scope: 48527,
        visibility: 'public'
      },
      {
        id: 47947,
        nodeType: 'StructDefinition',
        src: '596:78:36',
        nodes: [],
        canonicalName: 'Cosigners',
        documentation: {
          id: 47940,
          nodeType: 'StructuredDocumentation',
          src: '485:111:36',
          text: '@title Cosigners\n' +
            ' @notice Cosigners are addresses which cosign a document\n' +
            ' stamped by a third party.'
        },
        members: [
          {
            constant: false,
            id: 47942,
            mutability: 'mutable',
            name: 'total',
            nameLocation: '627:5:36',
            nodeType: 'VariableDeclaration',
            scope: 47947,
            src: '619:13:36',
            stateVariable: false,
            storageLocation: 'default',
            typeDescriptions: { typeIdentifier: 't_uint256', typeString: 'uint256' },
            typeName: {
              id: 47941,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '619:7:36',
              typeDescriptions: { typeIdentifier: 't_uint256', typeString: 'uint256' }
            },
            visibility: 'internal'
          },
          {
            constant: false,
            id: 47946,
            mutability: 'mutable',
            name: 'signers',
            nameLocation: '664:7:36',
            nodeType: 'VariableDeclaration',
            scope: 47947,
            src: '638:33:36',
            stateVariable: false,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_mapping$_t_address_$_t_bool_$',
              typeString: 'mapping(address => bool)'
            },
            typeName: {
              id: 47945,
              keyName: '',
              keyNameLocation: '-1:-1:-1',
              keyType: {
                id: 47943,
                name: 'address',
                nodeType: 'ElementaryTypeName',
                src: '647:7:36',
                typeDescriptions: { typeIdentifier: 't_address', typeString: 'address' }
              },
              nodeType: 'Mapping',
              src: '638:25:36',
              typeDescriptions: {
                typeIdentifier: 't_mapping$_t_address_$_t_bool_$',
                typeString: 'mapping(address => bool)'
              },
              valueName: '',
              valueNameLocation: '-1:-1:-1',
              valueType: {
                id: 47944,
                name: 'bool',
                nodeType: 'ElementaryTypeName',
                src: '658:4:36',
                typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
              }
            },
            visibility: 'internal'
          }
        ],
        name: 'Cosigners',
        nameLocation: '603:9:36',
        scope: 48527,
        visibility: 'public'
      },
      {
        id: 48296,
        nodeType: 'ContractDefinition',
        src: '838:5528:36',
        nodes: [
          {
            id: 47954,
            nodeType: 'VariableDeclaration',
            src: '898:31:36',
            nodes: [],
            constant: false,
            mutability: 'mutable',
            name: '_currentTokenId',
            nameLocation: '914:15:36',
            scope: 48296,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: { typeIdentifier: 't_uint256', typeString: 'uint256' },
            typeName: {
              id: 47953,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '898:7:36',
              typeDescriptions: { typeIdentifier: 't_uint256', typeString: 'uint256' }
            },
            visibility: 'private'
          },
          {
            id: 47958,
            nodeType: 'VariableDeclaration',
            src: '940:44:36',
            nodes: [],
            constant: false,
            mutability: 'mutable',
            name: '_registry',
            nameLocation: '975:9:36',
            scope: 48296,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_mapping$_t_uint256_$_t_string_storage_$',
              typeString: 'mapping(uint256 => string)'
            },
            typeName: {
              id: 47957,
              keyName: '',
              keyNameLocation: '-1:-1:-1',
              keyType: {
                id: 47955,
                name: 'uint256',
                nodeType: 'ElementaryTypeName',
                src: '948:7:36',
                typeDescriptions: { typeIdentifier: 't_uint256', typeString: 'uint256' }
              },
              nodeType: 'Mapping',
              src: '940:26:36',
              typeDescriptions: {
                typeIdentifier: 't_mapping$_t_uint256_$_t_string_storage_$',
                typeString: 'mapping(uint256 => string)'
              },
              valueName: '',
              valueNameLocation: '-1:-1:-1',
              valueType: {
                id: 47956,
                name: 'string',
                nodeType: 'ElementaryTypeName',
                src: '959:6:36',
                typeDescriptions: {
                  typeIdentifier: 't_string_storage_ptr',
                  typeString: 'string'
                }
              }
            },
            visibility: 'private'
          },
          {
            id: 47963,
            nodeType: 'VariableDeclaration',
            src: '990:47:36',
            nodes: [],
            constant: false,
            mutability: 'mutable',
            name: 'cosigners',
            nameLocation: '1028:9:36',
            scope: 48296,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_mapping$_t_uint256_$_t_struct$_Cosigners_$47947_storage_$',
              typeString: 'mapping(uint256 => struct Cosigners)'
            },
            typeName: {
              id: 47962,
              keyName: '',
              keyNameLocation: '-1:-1:-1',
              keyType: {
                id: 47959,
                name: 'uint256',
                nodeType: 'ElementaryTypeName',
                src: '998:7:36',
                typeDescriptions: { typeIdentifier: 't_uint256', typeString: 'uint256' }
              },
              nodeType: 'Mapping',
              src: '990:29:36',
              typeDescriptions: {
                typeIdentifier: 't_mapping$_t_uint256_$_t_struct$_Cosigners_$47947_storage_$',
                typeString: 'mapping(uint256 => struct Cosigners)'
              },
              valueName: '',
              valueNameLocation: '-1:-1:-1',
              valueType: {
                id: 47961,
                nodeType: 'UserDefinedTypeName',
                pathNode: {
                  id: 47960,
                  name: 'Cosigners',
                  nameLocations: [ '1009:9:36' ],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 47947,
                  src: '1009:9:36'
                },
                referencedDeclaration: 47947,
                src: '1009:9:36',
                typeDescriptions: {
                  typeIdentifier: 't_struct$_Cosigners_$47947_storage_ptr',
                  typeString: 'struct Cosigners'
                }
              }
            },
            visibility: 'private'
          },
          {
            id: 47971,
            nodeType: 'FunctionDefinition',
            src: '1048:46:36',
            nodes: [],
            body: {
              id: 47970,
              nodeType: 'Block',
              src: '1092:2:36',
              nodes: [],
              statements: []
            },
            implemented: true,
            kind: 'constructor',
            modifiers: [
              {
                arguments: [
                  {
                    hexValue: '43727970746f5374616d70',
                    id: 47966,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: 'string',
                    lValueRequested: false,
                    nodeType: 'Literal',
                    src: '1069:13:36',
                    typeDescriptions: {
                      typeIdentifier: 't_stringliteral_5eefe880a6dfe4f5c05982b7a9297f07da44a1538c38d91efe013575cca35a99',
                      typeString: 'literal_string "CryptoStamp"'
                    },
                    value: 'CryptoStamp'
                  },
                  {
                    hexValue: '53544d50',
                    id: 47967,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: 'string',
                    lValueRequested: false,
                    nodeType: 'Literal',
                    src: '1084:6:36',
                    typeDescriptions: {
                      typeIdentifier: 't_stringliteral_0ddeade3cc15fad5811661bc0417cb5b7330efe4fd88718108233c786c8abc4b',
                      typeString: 'literal_string "STMP"'
                    },
                    value: 'STMP'
                  }
                ],
                id: 47968,
                kind: 'baseConstructorSpecifier',
                modifierName: {
                  id: 47965,
                  name: 'ERC721',
                  nameLocations: [ '1062:6:36' ],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 46155,
                  src: '1062:6:36'
                },
                nodeType: 'ModifierInvocation',
                src: '1062:29:36'
              }
            ],
            name: '',
            nameLocation: '-1:-1:-1',
            parameters: {
              id: 47964,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1059:2:36'
            },
            returnParameters: {
              id: 47969,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1092:0:36'
            },
            scope: 48296,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 47985,
            nodeType: 'FunctionDefinition',
            src: '1100:128:36',
            nodes: [],
            body: {
              id: 47984,
              nodeType: 'Block',
              src: '1182:46:36',
              nodes: [],
              statements: [
                {
                  expression: {
                    id: 47982,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 47978,
                        name: '_registry',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 47958,
                        src: '1192:9:36',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint256_$_t_string_storage_$',
                          typeString: 'mapping(uint256 => string storage ref)'
                        }
                      },
                      id: 47980,
                      indexExpression: {
                        id: 47979,
                        name: 'tokenId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 47973,
                        src: '1202:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '1192:18:36',
                      typeDescriptions: {
                        typeIdentifier: 't_string_storage',
                        typeString: 'string storage ref'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 47981,
                      name: '_content',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 47975,
                      src: '1213:8:36',
                      typeDescriptions: {
                        typeIdentifier: 't_string_calldata_ptr',
                        typeString: 'string calldata'
                      }
                    },
                    src: '1192:29:36',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage',
                      typeString: 'string storage ref'
                    }
                  },
                  id: 47983,
                  nodeType: 'ExpressionStatement',
                  src: '1192:29:36'
                }
              ]
            },
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: '_setText',
            nameLocation: '1109:8:36',
            parameters: {
              id: 47976,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 47973,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '1126:7:36',
                  nodeType: 'VariableDeclaration',
                  scope: 47985,
                  src: '1118:15:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 47972,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '1118:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                },
                {
                  constant: false,
                  id: 47975,
                  mutability: 'mutable',
                  name: '_content',
                  nameLocation: '1151:8:36',
                  nodeType: 'VariableDeclaration',
                  scope: 47985,
                  src: '1135:24:36',
                  stateVariable: false,
                  storageLocation: 'calldata',
                  typeDescriptions: {
                    typeIdentifier: 't_string_calldata_ptr',
                    typeString: 'string'
                  },
                  typeName: {
                    id: 47974,
                    name: 'string',
                    nodeType: 'ElementaryTypeName',
                    src: '1135:6:36',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage_ptr',
                      typeString: 'string'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '1117:43:36'
            },
            returnParameters: {
              id: 47977,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1182:0:36'
            },
            scope: 48296,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'internal'
          },
          {
            id: 48028,
            nodeType: 'FunctionDefinition',
            src: '1423:345:36',
            nodes: [],
            body: {
              id: 48027,
              nodeType: 'Block',
              src: '1512:256:36',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    },
                    id: 47999,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        arguments: [
                          {
                            id: 47995,
                            name: '_content',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 47988,
                            src: '1532:8:36',
                            typeDescriptions: {
                              typeIdentifier: 't_string_calldata_ptr',
                              typeString: 'string calldata'
                            }
                          }
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: 't_string_calldata_ptr',
                              typeString: 'string calldata'
                            }
                          ],
                          id: 47994,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: 'ElementaryTypeNameExpression',
                          src: '1526:5:36',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_bytes_storage_ptr_$',
                            typeString: 'type(bytes storage pointer)'
                          },
                          typeName: {
                            id: 47993,
                            name: 'bytes',
                            nodeType: 'ElementaryTypeName',
                            src: '1526:5:36',
                            typeDescriptions: {}
                          }
                        },
                        id: 47996,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'typeConversion',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '1526:15:36',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_bytes_calldata_ptr',
                          typeString: 'bytes calldata'
                        }
                      },
                      id: 47997,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '1542:6:36',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '1526:22:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      hexValue: '323536',
                      id: 47998,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '1551:3:36',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_256_by_1',
                        typeString: 'int_const 256'
                      },
                      value: '256'
                    },
                    src: '1526:28:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  id: 48004,
                  nodeType: 'IfStatement',
                  src: '1522:72:36',
                  trueBody: {
                    expression: {
                      arguments: [
                        {
                          hexValue: '746f6f206c6f6e6720636f6e74656e74',
                          id: 48001,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'string',
                          lValueRequested: false,
                          nodeType: 'Literal',
                          src: '1575:18:36',
                          typeDescriptions: {
                            typeIdentifier: 't_stringliteral_100cf86bf440a501aeda68581d13f983d2f2b2a1a5023f6d1c3c6f4ba4efb142',
                            typeString: 'literal_string "too long content"'
                          },
                          value: 'too long content'
                        }
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_stringliteral_100cf86bf440a501aeda68581d13f983d2f2b2a1a5023f6d1c3c6f4ba4efb142',
                            typeString: 'literal_string "too long content"'
                          }
                        ],
                        id: 48000,
                        name: 'revert',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [ -19, -19 ],
                        referencedDeclaration: -19,
                        src: '1568:6:36',
                        typeDescriptions: {
                          typeIdentifier: 't_function_revert_pure$_t_string_memory_ptr_$returns$__$',
                          typeString: 'function (string memory) pure'
                        }
                      },
                      id: 48002,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '1568:26:36',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()'
                      }
                    },
                    id: 48003,
                    nodeType: 'ExpressionStatement',
                    src: '1568:26:36'
                  }
                },
                {
                  assignments: [ 48006 ],
                  declarations: [
                    {
                      constant: false,
                      id: 48006,
                      mutability: 'mutable',
                      name: 'author',
                      nameLocation: '1612:6:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48027,
                      src: '1604:14:36',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address'
                      },
                      typeName: {
                        id: 48005,
                        name: 'address',
                        nodeType: 'ElementaryTypeName',
                        src: '1604:7:36',
                        stateMutability: 'nonpayable',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        }
                      },
                      visibility: 'internal'
                    }
                  ],
                  id: 48009,
                  initialValue: {
                    expression: {
                      id: 48007,
                      name: 'msg',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: -15,
                      src: '1621:3:36',
                      typeDescriptions: {
                        typeIdentifier: 't_magic_message',
                        typeString: 'msg'
                      }
                    },
                    id: 48008,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    memberLocation: '1625:6:36',
                    memberName: 'sender',
                    nodeType: 'MemberAccess',
                    src: '1621:10:36',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address'
                    }
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '1604:27:36'
                },
                {
                  assignments: [ 48011 ],
                  declarations: [
                    {
                      constant: false,
                      id: 48011,
                      mutability: 'mutable',
                      name: 'newId',
                      nameLocation: '1649:5:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48027,
                      src: '1641:13:36',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      },
                      typeName: {
                        id: 48010,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '1641:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      },
                      visibility: 'internal'
                    }
                  ],
                  id: 48014,
                  initialValue: {
                    id: 48013,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: 'UnaryOperation',
                    operator: '++',
                    prefix: true,
                    src: '1657:17:36',
                    subExpression: {
                      id: 48012,
                      name: '_currentTokenId',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 47954,
                      src: '1659:15:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '1641:33:36'
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 48016,
                        name: 'author',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48006,
                        src: '1690:6:36',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        }
                      },
                      {
                        id: 48017,
                        name: 'newId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48011,
                        src: '1698:5:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      ],
                      id: 48015,
                      name: '_mint',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 45762,
                      src: '1684:5:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256)'
                      }
                    },
                    id: 48018,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '1684:20:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()'
                    }
                  },
                  id: 48019,
                  nodeType: 'ExpressionStatement',
                  src: '1684:20:36'
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 48021,
                        name: 'newId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48011,
                        src: '1723:5:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      },
                      {
                        id: 48022,
                        name: '_content',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 47988,
                        src: '1730:8:36',
                        typeDescriptions: {
                          typeIdentifier: 't_string_calldata_ptr',
                          typeString: 'string calldata'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        },
                        {
                          typeIdentifier: 't_string_calldata_ptr',
                          typeString: 'string calldata'
                        }
                      ],
                      id: 48020,
                      name: '_setText',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 47985,
                      src: '1714:8:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$returns$__$',
                        typeString: 'function (uint256,string calldata)'
                      }
                    },
                    id: 48023,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '1714:25:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()'
                    }
                  },
                  id: 48024,
                  nodeType: 'ExpressionStatement',
                  src: '1714:25:36'
                },
                {
                  expression: {
                    id: 48025,
                    name: 'newId',
                    nodeType: 'Identifier',
                    overloadedDeclarations: [],
                    referencedDeclaration: 48011,
                    src: '1756:5:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  functionReturnParameters: 47992,
                  id: 48026,
                  nodeType: 'Return',
                  src: '1749:12:36'
                }
              ]
            },
            documentation: {
              id: 47986,
              nodeType: 'StructuredDocumentation',
              src: '1234:184:36',
              text: '@notice stamps a short text (<256 char.) minting a token and\n' +
                ' saving it on this contract\n' +
                ' @param _content the content to stamp.\n' +
                ' @return the new minted tokenID'
            },
            functionSelector: '57a656c9',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'stampTextContent',
            nameLocation: '1432:16:36',
            parameters: {
              id: 47989,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 47988,
                  mutability: 'mutable',
                  name: '_content',
                  nameLocation: '1465:8:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48028,
                  src: '1449:24:36',
                  stateVariable: false,
                  storageLocation: 'calldata',
                  typeDescriptions: {
                    typeIdentifier: 't_string_calldata_ptr',
                    typeString: 'string'
                  },
                  typeName: {
                    id: 47987,
                    name: 'string',
                    nodeType: 'ElementaryTypeName',
                    src: '1449:6:36',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage_ptr',
                      typeString: 'string'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '1448:26:36'
            },
            returnParameters: {
              id: 47992,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 47991,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 48028,
                  src: '1499:7:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 47990,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '1499:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '1498:9:36'
            },
            scope: 48296,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48045,
            nodeType: 'FunctionDefinition',
            src: '1941:157:36',
            nodes: [],
            body: {
              id: 48044,
              nodeType: 'Block',
              src: '2024:74:36',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 48037,
                        name: 'tokenId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48031,
                        src: '2048:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      ],
                      id: 48036,
                      name: '_requireOwned',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 46090,
                      src: '2034:13:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_view$_t_uint256_$returns$_t_address_$',
                        typeString: 'function (uint256) view returns (address)'
                      }
                    },
                    id: 48038,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '2034:22:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address'
                    }
                  },
                  id: 48039,
                  nodeType: 'ExpressionStatement',
                  src: '2034:22:36'
                },
                {
                  expression: {
                    baseExpression: {
                      id: 48040,
                      name: '_registry',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 47958,
                      src: '2073:9:36',
                      typeDescriptions: {
                        typeIdentifier: 't_mapping$_t_uint256_$_t_string_storage_$',
                        typeString: 'mapping(uint256 => string storage ref)'
                      }
                    },
                    id: 48042,
                    indexExpression: {
                      id: 48041,
                      name: 'tokenId',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48031,
                      src: '2083:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: 'IndexAccess',
                    src: '2073:18:36',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage',
                      typeString: 'string storage ref'
                    }
                  },
                  functionReturnParameters: 48035,
                  id: 48043,
                  nodeType: 'Return',
                  src: '2066:25:36'
                }
              ]
            },
            documentation: {
              id: 48029,
              nodeType: 'StructuredDocumentation',
              src: '1774:162:36',
              text: '@notice get the text corresponding to this token\n' +
                ' @param tokenId The tokenID to which the content is bound\n' +
                ' @return the text bound to the token.'
            },
            functionSelector: 'b6e521d5',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'tokenText',
            nameLocation: '1950:9:36',
            parameters: {
              id: 48032,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48031,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '1968:7:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48045,
                  src: '1960:15:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 48030,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '1960:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '1959:17:36'
            },
            returnParameters: {
              id: 48035,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48034,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 48045,
                  src: '2005:13:36',
                  stateVariable: false,
                  storageLocation: 'memory',
                  typeDescriptions: {
                    typeIdentifier: 't_string_memory_ptr',
                    typeString: 'string'
                  },
                  typeName: {
                    id: 48033,
                    name: 'string',
                    nodeType: 'ElementaryTypeName',
                    src: '2005:6:36',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage_ptr',
                      typeString: 'string'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '2004:15:36'
            },
            scope: 48296,
            stateMutability: 'view',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48062,
            nodeType: 'FunctionDefinition',
            src: '2265:189:36',
            nodes: [],
            body: {
              id: 48061,
              nodeType: 'Block',
              src: '2407:47:36',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 48058,
                        name: 'tokenId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48048,
                        src: '2439:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      ],
                      expression: {
                        id: 48056,
                        name: 'super',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -25,
                        src: '2424:5:36',
                        typeDescriptions: {
                          typeIdentifier: 't_type$_t_super$_CryptoStamp_$48296_$',
                          typeString: 'type(contract super CryptoStamp)'
                        }
                      },
                      id: 48057,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '2430:8:36',
                      memberName: 'tokenURI',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 46396,
                      src: '2424:14:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$',
                        typeString: 'function (uint256) view returns (string memory)'
                      }
                    },
                    id: 48059,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '2424:23:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_string_memory_ptr',
                      typeString: 'string memory'
                    }
                  },
                  functionReturnParameters: 48055,
                  id: 48060,
                  nodeType: 'Return',
                  src: '2417:30:36'
                }
              ]
            },
            baseFunctions: [ 45342, 46396 ],
            documentation: {
              id: 48046,
              nodeType: 'StructuredDocumentation',
              src: '2104:156:36',
              text: '@notice Get the CID corresponding to this token\n' +
                ' @param tokenId The tokenID to which the CID is bound\n' +
                ' @return the CID bound to the token.'
            },
            functionSelector: 'c87b56dd',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'tokenURI',
            nameLocation: '2274:8:36',
            overrides: {
              id: 48052,
              nodeType: 'OverrideSpecifier',
              overrides: [
                {
                  id: 48050,
                  name: 'ERC721',
                  nameLocations: [ '2345:6:36' ],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 46155,
                  src: '2345:6:36'
                },
                {
                  id: 48051,
                  name: 'ERC721URIStorage',
                  nameLocations: [ '2353:16:36' ],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 46416,
                  src: '2353:16:36'
                }
              ],
              src: '2336:34:36'
            },
            parameters: {
              id: 48049,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48048,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '2291:7:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48062,
                  src: '2283:15:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 48047,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '2283:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '2282:17:36'
            },
            returnParameters: {
              id: 48055,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48054,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 48062,
                  src: '2388:13:36',
                  stateVariable: false,
                  storageLocation: 'memory',
                  typeDescriptions: {
                    typeIdentifier: 't_string_memory_ptr',
                    typeString: 'string'
                  },
                  typeName: {
                    id: 48053,
                    name: 'string',
                    nodeType: 'ElementaryTypeName',
                    src: '2388:6:36',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage_ptr',
                      typeString: 'string'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '2387:15:36'
            },
            scope: 48296,
            stateMutability: 'view',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48079,
            nodeType: 'FunctionDefinition',
            src: '2839:205:36',
            nodes: [],
            body: {
              id: 48078,
              nodeType: 'Block',
              src: '2984:60:36',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 48075,
                        name: 'interfaceId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48065,
                        src: '3025:11:36',
                        typeDescriptions: {
                          typeIdentifier: 't_bytes4',
                          typeString: 'bytes4'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bytes4',
                          typeString: 'bytes4'
                        }
                      ],
                      expression: {
                        id: 48073,
                        name: 'super',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -25,
                        src: '3001:5:36',
                        typeDescriptions: {
                          typeIdentifier: 't_type$_t_super$_CryptoStamp_$48296_$',
                          typeString: 'type(contract super CryptoStamp)'
                        }
                      },
                      id: 48074,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '3007:17:36',
                      memberName: 'supportsInterface',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 46339,
                      src: '3001:23:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_view$_t_bytes4_$returns$_t_bool_$',
                        typeString: 'function (bytes4) view returns (bool)'
                      }
                    },
                    id: 48076,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '3001:36:36',
                    tryCall: false,
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  functionReturnParameters: 48072,
                  id: 48077,
                  nodeType: 'Return',
                  src: '2994:43:36'
                }
              ]
            },
            baseFunctions: [ 45247, 46339 ],
            documentation: {
              id: 48063,
              nodeType: 'StructuredDocumentation',
              src: '2460:374:36',
              text: '@notice Query if a contract implements an interface\n' +
                ' @param interfaceId The interface identifier, as specified in ERC-165\n' +
                ' @dev Interface identification is specified in ERC-165. This function\n' +
                '  uses less than 30,000 gas.\n' +
                ' @return `true` if the contract implements `interfaceID` and\n' +
                '  `interfaceID` is not 0xffffffff, `false` otherwise '
            },
            functionSelector: '01ffc9a7',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'supportsInterface',
            nameLocation: '2848:17:36',
            overrides: {
              id: 48069,
              nodeType: 'OverrideSpecifier',
              overrides: [
                {
                  id: 48067,
                  name: 'ERC721',
                  nameLocations: [ '2931:6:36' ],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 46155,
                  src: '2931:6:36'
                },
                {
                  id: 48068,
                  name: 'ERC721URIStorage',
                  nameLocations: [ '2939:16:36' ],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 46416,
                  src: '2939:16:36'
                }
              ],
              src: '2922:34:36'
            },
            parameters: {
              id: 48066,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48065,
                  mutability: 'mutable',
                  name: 'interfaceId',
                  nameLocation: '2873:11:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48079,
                  src: '2866:18:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: { typeIdentifier: 't_bytes4', typeString: 'bytes4' },
                  typeName: {
                    id: 48064,
                    name: 'bytes4',
                    nodeType: 'ElementaryTypeName',
                    src: '2866:6:36',
                    typeDescriptions: {
                      typeIdentifier: 't_bytes4',
                      typeString: 'bytes4'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '2865:20:36'
            },
            returnParameters: {
              id: 48072,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48071,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 48079,
                  src: '2974:4:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' },
                  typeName: {
                    id: 48070,
                    name: 'bool',
                    nodeType: 'ElementaryTypeName',
                    src: '2974:4:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  visibility: 'internal'
                }
              ],
              src: '2973:6:36'
            },
            scope: 48296,
            stateMutability: 'view',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48110,
            nodeType: 'FunctionDefinition',
            src: '3237:259:36',
            nodes: [],
            body: {
              id: 48109,
              nodeType: 'Block',
              src: '3317:179:36',
              nodes: [],
              statements: [
                {
                  assignments: [ 48088 ],
                  declarations: [
                    {
                      constant: false,
                      id: 48088,
                      mutability: 'mutable',
                      name: 'author',
                      nameLocation: '3335:6:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48109,
                      src: '3327:14:36',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address'
                      },
                      typeName: {
                        id: 48087,
                        name: 'address',
                        nodeType: 'ElementaryTypeName',
                        src: '3327:7:36',
                        stateMutability: 'nonpayable',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        }
                      },
                      visibility: 'internal'
                    }
                  ],
                  id: 48091,
                  initialValue: {
                    expression: {
                      id: 48089,
                      name: 'msg',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: -15,
                      src: '3344:3:36',
                      typeDescriptions: {
                        typeIdentifier: 't_magic_message',
                        typeString: 'msg'
                      }
                    },
                    id: 48090,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    memberLocation: '3348:6:36',
                    memberName: 'sender',
                    nodeType: 'MemberAccess',
                    src: '3344:10:36',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address'
                    }
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '3327:27:36'
                },
                {
                  assignments: [ 48093 ],
                  declarations: [
                    {
                      constant: false,
                      id: 48093,
                      mutability: 'mutable',
                      name: 'newId',
                      nameLocation: '3372:5:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48109,
                      src: '3364:13:36',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      },
                      typeName: {
                        id: 48092,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '3364:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      },
                      visibility: 'internal'
                    }
                  ],
                  id: 48096,
                  initialValue: {
                    id: 48095,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: 'UnaryOperation',
                    operator: '++',
                    prefix: true,
                    src: '3380:17:36',
                    subExpression: {
                      id: 48094,
                      name: '_currentTokenId',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 47954,
                      src: '3382:15:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '3364:33:36'
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 48098,
                        name: 'author',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48088,
                        src: '3413:6:36',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        }
                      },
                      {
                        id: 48099,
                        name: 'newId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48093,
                        src: '3421:5:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      ],
                      id: 48097,
                      name: '_mint',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 45762,
                      src: '3407:5:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256)'
                      }
                    },
                    id: 48100,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '3407:20:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()'
                    }
                  },
                  id: 48101,
                  nodeType: 'ExpressionStatement',
                  src: '3407:20:36'
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 48103,
                        name: 'newId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48093,
                        src: '3450:5:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      },
                      {
                        id: 48104,
                        name: '_tokenURI',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48082,
                        src: '3457:9:36',
                        typeDescriptions: {
                          typeIdentifier: 't_string_memory_ptr',
                          typeString: 'string memory'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        },
                        {
                          typeIdentifier: 't_string_memory_ptr',
                          typeString: 'string memory'
                        }
                      ],
                      id: 48102,
                      name: '_setTokenURI',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 46415,
                      src: '3437:12:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (uint256,string memory)'
                      }
                    },
                    id: 48105,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '3437:30:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()'
                    }
                  },
                  id: 48106,
                  nodeType: 'ExpressionStatement',
                  src: '3437:30:36'
                },
                {
                  expression: {
                    id: 48107,
                    name: 'newId',
                    nodeType: 'Identifier',
                    overloadedDeclarations: [],
                    referencedDeclaration: 48093,
                    src: '3484:5:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  functionReturnParameters: 48086,
                  id: 48108,
                  nodeType: 'Return',
                  src: '3477:12:36'
                }
              ]
            },
            documentation: {
              id: 48080,
              nodeType: 'StructuredDocumentation',
              src: '3054:178:36',
              text: '@notice stamps a CID on IPFS storage, minting a token and\n' +
                ' saving it on this contract\n' +
                ' @param _tokenURI the CID to stamp.\n' +
                ' @return the new minted tokenID'
            },
            functionSelector: '486f5fd5',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'stampURI',
            nameLocation: '3246:8:36',
            parameters: {
              id: 48083,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48082,
                  mutability: 'mutable',
                  name: '_tokenURI',
                  nameLocation: '3269:9:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48110,
                  src: '3255:23:36',
                  stateVariable: false,
                  storageLocation: 'memory',
                  typeDescriptions: {
                    typeIdentifier: 't_string_memory_ptr',
                    typeString: 'string'
                  },
                  typeName: {
                    id: 48081,
                    name: 'string',
                    nodeType: 'ElementaryTypeName',
                    src: '3255:6:36',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage_ptr',
                      typeString: 'string'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '3254:25:36'
            },
            returnParameters: {
              id: 48086,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48085,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 48110,
                  src: '3304:7:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 48084,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3304:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '3303:9:36'
            },
            scope: 48296,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48160,
            nodeType: 'FunctionDefinition',
            src: '3684:429:36',
            nodes: [],
            body: {
              id: 48159,
              nodeType: 'Block',
              src: '3766:347:36',
              nodes: [],
              statements: [
                {
                  assignments: [ 48120 ],
                  declarations: [
                    {
                      constant: false,
                      id: 48120,
                      mutability: 'mutable',
                      name: 'value',
                      nameLocation: '3790:5:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48159,
                      src: '3776:19:36',
                      stateVariable: false,
                      storageLocation: 'memory',
                      typeDescriptions: {
                        typeIdentifier: 't_string_memory_ptr',
                        typeString: 'string'
                      },
                      typeName: {
                        id: 48119,
                        name: 'string',
                        nodeType: 'ElementaryTypeName',
                        src: '3776:6:36',
                        typeDescriptions: {
                          typeIdentifier: 't_string_storage_ptr',
                          typeString: 'string'
                        }
                      },
                      visibility: 'internal'
                    }
                  ],
                  id: 48124,
                  initialValue: {
                    arguments: [
                      {
                        id: 48122,
                        name: 'tokenId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48113,
                        src: '3807:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      ],
                      id: 48121,
                      name: 'tokenURI',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [ 48062 ],
                      referencedDeclaration: 48062,
                      src: '3798:8:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$',
                        typeString: 'function (uint256) view returns (string memory)'
                      }
                    },
                    id: 48123,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '3798:17:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_string_memory_ptr',
                      typeString: 'string memory'
                    }
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '3776:39:36'
                },
                {
                  assignments: [ 48127 ],
                  declarations: [
                    {
                      constant: false,
                      id: 48127,
                      mutability: 'mutable',
                      name: 'contentType',
                      nameLocation: '3837:11:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48159,
                      src: '3825:23:36',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_enum$_ContentType_$47932',
                        typeString: 'enum ContentType'
                      },
                      typeName: {
                        id: 48126,
                        nodeType: 'UserDefinedTypeName',
                        pathNode: {
                          id: 48125,
                          name: 'ContentType',
                          nameLocations: [ '3825:11:36' ],
                          nodeType: 'IdentifierPath',
                          referencedDeclaration: 47932,
                          src: '3825:11:36'
                        },
                        referencedDeclaration: 47932,
                        src: '3825:11:36',
                        typeDescriptions: {
                          typeIdentifier: 't_enum$_ContentType_$47932',
                          typeString: 'enum ContentType'
                        }
                      },
                      visibility: 'internal'
                    }
                  ],
                  id: 48128,
                  nodeType: 'VariableDeclarationStatement',
                  src: '3825:23:36'
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    },
                    id: 48135,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        arguments: [
                          {
                            id: 48131,
                            name: 'value',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 48120,
                            src: '3868:5:36',
                            typeDescriptions: {
                              typeIdentifier: 't_string_memory_ptr',
                              typeString: 'string memory'
                            }
                          }
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: 't_string_memory_ptr',
                              typeString: 'string memory'
                            }
                          ],
                          id: 48130,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: 'ElementaryTypeNameExpression',
                          src: '3862:5:36',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_bytes_storage_ptr_$',
                            typeString: 'type(bytes storage pointer)'
                          },
                          typeName: {
                            id: 48129,
                            name: 'bytes',
                            nodeType: 'ElementaryTypeName',
                            src: '3862:5:36',
                            typeDescriptions: {}
                          }
                        },
                        id: 48132,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'typeConversion',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '3862:12:36',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_bytes_memory_ptr',
                          typeString: 'bytes memory'
                        }
                      },
                      id: 48133,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '3875:6:36',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '3862:19:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    nodeType: 'BinaryOperation',
                    operator: '!=',
                    rightExpression: {
                      hexValue: '30',
                      id: 48134,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '3885:1:36',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0'
                      },
                      value: '0'
                    },
                    src: '3862:24:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  falseBody: {
                    id: 48152,
                    nodeType: 'Block',
                    src: '3944:95:36',
                    statements: [
                      {
                        expression: {
                          id: 48145,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 48141,
                            name: 'value',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 48120,
                            src: '3958:5:36',
                            typeDescriptions: {
                              typeIdentifier: 't_string_memory_ptr',
                              typeString: 'string memory'
                            }
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            arguments: [
                              {
                                id: 48143,
                                name: 'tokenId',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 48113,
                                src: '3976:7:36',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256'
                                }
                              }
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256'
                                }
                              ],
                              id: 48142,
                              name: 'tokenText',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 48045,
                              src: '3966:9:36',
                              typeDescriptions: {
                                typeIdentifier: 't_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$',
                                typeString: 'function (uint256) view returns (string memory)'
                              }
                            },
                            id: 48144,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '3966:18:36',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_string_memory_ptr',
                              typeString: 'string memory'
                            }
                          },
                          src: '3958:26:36',
                          typeDescriptions: {
                            typeIdentifier: 't_string_memory_ptr',
                            typeString: 'string memory'
                          }
                        },
                        id: 48146,
                        nodeType: 'ExpressionStatement',
                        src: '3958:26:36'
                      },
                      {
                        expression: {
                          id: 48150,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 48147,
                            name: 'contentType',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 48127,
                            src: '3998:11:36',
                            typeDescriptions: {
                              typeIdentifier: 't_enum$_ContentType_$47932',
                              typeString: 'enum ContentType'
                            }
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            expression: {
                              id: 48148,
                              name: 'ContentType',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 47932,
                              src: '4012:11:36',
                              typeDescriptions: {
                                typeIdentifier: 't_type$_t_enum$_ContentType_$47932_$',
                                typeString: 'type(enum ContentType)'
                              }
                            },
                            id: 48149,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            memberLocation: '4024:4:36',
                            memberName: 'Text',
                            nodeType: 'MemberAccess',
                            referencedDeclaration: 47930,
                            src: '4012:16:36',
                            typeDescriptions: {
                              typeIdentifier: 't_enum$_ContentType_$47932',
                              typeString: 'enum ContentType'
                            }
                          },
                          src: '3998:30:36',
                          typeDescriptions: {
                            typeIdentifier: 't_enum$_ContentType_$47932',
                            typeString: 'enum ContentType'
                          }
                        },
                        id: 48151,
                        nodeType: 'ExpressionStatement',
                        src: '3998:30:36'
                      }
                    ]
                  },
                  id: 48153,
                  nodeType: 'IfStatement',
                  src: '3858:181:36',
                  trueBody: {
                    expression: {
                      id: 48139,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 48136,
                        name: 'contentType',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48127,
                        src: '3900:11:36',
                        typeDescriptions: {
                          typeIdentifier: 't_enum$_ContentType_$47932',
                          typeString: 'enum ContentType'
                        }
                      },
                      nodeType: 'Assignment',
                      operator: '=',
                      rightHandSide: {
                        expression: {
                          id: 48137,
                          name: 'ContentType',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 47932,
                          src: '3914:11:36',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_enum$_ContentType_$47932_$',
                            typeString: 'type(enum ContentType)'
                          }
                        },
                        id: 48138,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        memberLocation: '3926:3:36',
                        memberName: 'URI',
                        nodeType: 'MemberAccess',
                        referencedDeclaration: 47931,
                        src: '3914:15:36',
                        typeDescriptions: {
                          typeIdentifier: 't_enum$_ContentType_$47932',
                          typeString: 'enum ContentType'
                        }
                      },
                      src: '3900:29:36',
                      typeDescriptions: {
                        typeIdentifier: 't_enum$_ContentType_$47932',
                        typeString: 'enum ContentType'
                      }
                    },
                    id: 48140,
                    nodeType: 'ExpressionStatement',
                    src: '3900:29:36'
                  }
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 48155,
                        name: 'contentType',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48127,
                        src: '4078:11:36',
                        typeDescriptions: {
                          typeIdentifier: 't_enum$_ContentType_$47932',
                          typeString: 'enum ContentType'
                        }
                      },
                      {
                        id: 48156,
                        name: 'value',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48120,
                        src: '4098:5:36',
                        typeDescriptions: {
                          typeIdentifier: 't_string_memory_ptr',
                          typeString: 'string memory'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_enum$_ContentType_$47932',
                          typeString: 'enum ContentType'
                        },
                        {
                          typeIdentifier: 't_string_memory_ptr',
                          typeString: 'string memory'
                        }
                      ],
                      id: 48154,
                      name: 'Content',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 47939,
                      src: '4055:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_type$_t_struct$_Content_$47939_storage_ptr_$',
                        typeString: 'type(struct Content storage pointer)'
                      }
                    },
                    id: 48157,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'structConstructorCall',
                    lValueRequested: false,
                    nameLocations: [ '4065:11:36', '4091:5:36' ],
                    names: [ 'contentType', 'value' ],
                    nodeType: 'FunctionCall',
                    src: '4055:51:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_struct$_Content_$47939_memory_ptr',
                      typeString: 'struct Content memory'
                    }
                  },
                  functionReturnParameters: 48118,
                  id: 48158,
                  nodeType: 'Return',
                  src: '4048:58:36'
                }
              ]
            },
            documentation: {
              id: 48111,
              nodeType: 'StructuredDocumentation',
              src: '3502:177:36',
              text: '@notice get content bound to a specific tokenID\n' +
                ' @param tokenId The tokenID to which the Content is bound\n' +
                ' @return the Content(CID or Text) bound to the token.'
            },
            functionSelector: 'baa0b806',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'content',
            nameLocation: '3693:7:36',
            parameters: {
              id: 48114,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48113,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '3709:7:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48160,
                  src: '3701:15:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 48112,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3701:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '3700:17:36'
            },
            returnParameters: {
              id: 48118,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48117,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 48160,
                  src: '3746:14:36',
                  stateVariable: false,
                  storageLocation: 'memory',
                  typeDescriptions: {
                    typeIdentifier: 't_struct$_Content_$47939_memory_ptr',
                    typeString: 'struct Content'
                  },
                  typeName: {
                    id: 48116,
                    nodeType: 'UserDefinedTypeName',
                    pathNode: {
                      id: 48115,
                      name: 'Content',
                      nameLocations: [ '3746:7:36' ],
                      nodeType: 'IdentifierPath',
                      referencedDeclaration: 47939,
                      src: '3746:7:36'
                    },
                    referencedDeclaration: 47939,
                    src: '3746:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_struct$_Content_$47939_storage_ptr',
                      typeString: 'struct Content'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '3745:16:36'
            },
            scope: 48296,
            stateMutability: 'view',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48217,
            nodeType: 'FunctionDefinition',
            src: '4499:468:36',
            nodes: [],
            body: {
              id: 48216,
              nodeType: 'Block',
              src: '4596:371:36',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    },
                    id: 48176,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        arguments: [
                          {
                            id: 48172,
                            name: 'terms',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 48165,
                            src: '4616:5:36',
                            typeDescriptions: {
                              typeIdentifier: 't_string_calldata_ptr',
                              typeString: 'string calldata'
                            }
                          }
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: 't_string_calldata_ptr',
                              typeString: 'string calldata'
                            }
                          ],
                          id: 48171,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: 'ElementaryTypeNameExpression',
                          src: '4610:5:36',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_bytes_storage_ptr_$',
                            typeString: 'type(bytes storage pointer)'
                          },
                          typeName: {
                            id: 48170,
                            name: 'bytes',
                            nodeType: 'ElementaryTypeName',
                            src: '4610:5:36',
                            typeDescriptions: {}
                          }
                        },
                        id: 48173,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'typeConversion',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '4610:12:36',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_bytes_calldata_ptr',
                          typeString: 'bytes calldata'
                        }
                      },
                      id: 48174,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '4623:6:36',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '4610:19:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      hexValue: '32303438',
                      id: 48175,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '4632:4:36',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_2048_by_1',
                        typeString: 'int_const 2048'
                      },
                      value: '2048'
                    },
                    src: '4610:26:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  id: 48181,
                  nodeType: 'IfStatement',
                  src: '4606:68:36',
                  trueBody: {
                    expression: {
                      arguments: [
                        {
                          hexValue: '746f6f206c6f6e67207465726d73',
                          id: 48178,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'string',
                          lValueRequested: false,
                          nodeType: 'Literal',
                          src: '4657:16:36',
                          typeDescriptions: {
                            typeIdentifier: 't_stringliteral_4eb8da6cffcea5dfeb56950cc263d91dcc90ff0bed6eeab8e1568e0f5a88b891',
                            typeString: 'literal_string "too long terms"'
                          },
                          value: 'too long terms'
                        }
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_stringliteral_4eb8da6cffcea5dfeb56950cc263d91dcc90ff0bed6eeab8e1568e0f5a88b891',
                            typeString: 'literal_string "too long terms"'
                          }
                        ],
                        id: 48177,
                        name: 'revert',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [ -19, -19 ],
                        referencedDeclaration: -19,
                        src: '4650:6:36',
                        typeDescriptions: {
                          typeIdentifier: 't_function_revert_pure$_t_string_memory_ptr_$returns$__$',
                          typeString: 'function (string memory) pure'
                        }
                      },
                      id: 48179,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '4650:24:36',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()'
                      }
                    },
                    id: 48180,
                    nodeType: 'ExpressionStatement',
                    src: '4650:24:36'
                  }
                },
                {
                  assignments: [ 48183 ],
                  declarations: [
                    {
                      constant: false,
                      id: 48183,
                      mutability: 'mutable',
                      name: 'recipient',
                      nameLocation: '4692:9:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48216,
                      src: '4684:17:36',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address'
                      },
                      typeName: {
                        id: 48182,
                        name: 'address',
                        nodeType: 'ElementaryTypeName',
                        src: '4684:7:36',
                        stateMutability: 'nonpayable',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        }
                      },
                      visibility: 'internal'
                    }
                  ],
                  id: 48186,
                  initialValue: {
                    expression: {
                      id: 48184,
                      name: 'msg',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: -15,
                      src: '4704:3:36',
                      typeDescriptions: {
                        typeIdentifier: 't_magic_message',
                        typeString: 'msg'
                      }
                    },
                    id: 48185,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    memberLocation: '4708:6:36',
                    memberName: 'sender',
                    nodeType: 'MemberAccess',
                    src: '4704:10:36',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address'
                    }
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '4684:30:36'
                },
                {
                  assignments: [ 48188 ],
                  declarations: [
                    {
                      constant: false,
                      id: 48188,
                      mutability: 'mutable',
                      name: 'owner',
                      nameLocation: '4732:5:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48216,
                      src: '4724:13:36',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address'
                      },
                      typeName: {
                        id: 48187,
                        name: 'address',
                        nodeType: 'ElementaryTypeName',
                        src: '4724:7:36',
                        stateMutability: 'nonpayable',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        }
                      },
                      visibility: 'internal'
                    }
                  ],
                  id: 48192,
                  initialValue: {
                    arguments: [
                      {
                        id: 48190,
                        name: 'tokenId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48163,
                        src: '4748:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      ],
                      id: 48189,
                      name: 'ownerOf',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 45288,
                      src: '4740:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_view$_t_uint256_$returns$_t_address_$',
                        typeString: 'function (uint256) view returns (address)'
                      }
                    },
                    id: 48191,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '4740:16:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address'
                    }
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '4724:32:36'
                },
                {
                  assignments: [ 48195 ],
                  declarations: [
                    {
                      constant: false,
                      id: 48195,
                      mutability: 'mutable',
                      name: 'newDeriv',
                      nameLocation: '4784:8:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48216,
                      src: '4766:26:36',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_contract$_DerivativeProduct_$48526',
                        typeString: 'contract DerivativeProduct'
                      },
                      typeName: {
                        id: 48194,
                        nodeType: 'UserDefinedTypeName',
                        pathNode: {
                          id: 48193,
                          name: 'DerivativeProduct',
                          nameLocations: [ '4766:17:36' ],
                          nodeType: 'IdentifierPath',
                          referencedDeclaration: 48526,
                          src: '4766:17:36'
                        },
                        referencedDeclaration: 48526,
                        src: '4766:17:36',
                        typeDescriptions: {
                          typeIdentifier: 't_contract$_DerivativeProduct_$48526',
                          typeString: 'contract DerivativeProduct'
                        }
                      },
                      visibility: 'internal'
                    }
                  ],
                  id: 48210,
                  initialValue: {
                    arguments: [
                      {
                        id: 48199,
                        name: 'tokenId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48163,
                        src: '4830:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      },
                      {
                        arguments: [
                          {
                            id: 48202,
                            name: 'owner',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 48188,
                            src: '4859:5:36',
                            typeDescriptions: {
                              typeIdentifier: 't_address',
                              typeString: 'address'
                            }
                          }
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: 't_address',
                              typeString: 'address'
                            }
                          ],
                          id: 48201,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: 'ElementaryTypeNameExpression',
                          src: '4851:8:36',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_address_payable_$',
                            typeString: 'type(address payable)'
                          },
                          typeName: {
                            id: 48200,
                            name: 'address',
                            nodeType: 'ElementaryTypeName',
                            src: '4851:8:36',
                            stateMutability: 'payable',
                            typeDescriptions: {}
                          }
                        },
                        id: 48203,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'typeConversion',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '4851:14:36',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_address_payable',
                          typeString: 'address payable'
                        }
                      },
                      {
                        arguments: [
                          {
                            id: 48206,
                            name: 'recipient',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 48183,
                            src: '4887:9:36',
                            typeDescriptions: {
                              typeIdentifier: 't_address',
                              typeString: 'address'
                            }
                          }
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: 't_address',
                              typeString: 'address'
                            }
                          ],
                          id: 48205,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: 'ElementaryTypeNameExpression',
                          src: '4879:8:36',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_address_payable_$',
                            typeString: 'type(address payable)'
                          },
                          typeName: {
                            id: 48204,
                            name: 'address',
                            nodeType: 'ElementaryTypeName',
                            src: '4879:8:36',
                            stateMutability: 'payable',
                            typeDescriptions: {}
                          }
                        },
                        id: 48207,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'typeConversion',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '4879:18:36',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_address_payable',
                          typeString: 'address payable'
                        }
                      },
                      {
                        id: 48208,
                        name: 'terms',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48165,
                        src: '4911:5:36',
                        typeDescriptions: {
                          typeIdentifier: 't_string_calldata_ptr',
                          typeString: 'string calldata'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        },
                        {
                          typeIdentifier: 't_address_payable',
                          typeString: 'address payable'
                        },
                        {
                          typeIdentifier: 't_address_payable',
                          typeString: 'address payable'
                        },
                        {
                          typeIdentifier: 't_string_calldata_ptr',
                          typeString: 'string calldata'
                        }
                      ],
                      id: 48198,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'NewExpression',
                      src: '4795:21:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_creation_nonpayable$_t_uint256_$_t_address_payable_$_t_address_payable_$_t_string_memory_ptr_$returns$_t_contract$_DerivativeProduct_$48526_$',
                        typeString: 'function (uint256,address payable,address payable,string memory) returns (contract DerivativeProduct)'
                      },
                      typeName: {
                        id: 48197,
                        nodeType: 'UserDefinedTypeName',
                        pathNode: {
                          id: 48196,
                          name: 'DerivativeProduct',
                          nameLocations: [ '4799:17:36' ],
                          nodeType: 'IdentifierPath',
                          referencedDeclaration: 48526,
                          src: '4799:17:36'
                        },
                        referencedDeclaration: 48526,
                        src: '4799:17:36',
                        typeDescriptions: {
                          typeIdentifier: 't_contract$_DerivativeProduct_$48526',
                          typeString: 'contract DerivativeProduct'
                        }
                      }
                    },
                    id: 48209,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '4795:131:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_contract$_DerivativeProduct_$48526',
                      typeString: 'contract DerivativeProduct'
                    }
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '4766:160:36'
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 48213,
                        name: 'newDeriv',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48195,
                        src: '4951:8:36',
                        typeDescriptions: {
                          typeIdentifier: 't_contract$_DerivativeProduct_$48526',
                          typeString: 'contract DerivativeProduct'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_contract$_DerivativeProduct_$48526',
                          typeString: 'contract DerivativeProduct'
                        }
                      ],
                      id: 48212,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: 'ElementaryTypeNameExpression',
                      src: '4943:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_type$_t_address_$',
                        typeString: 'type(address)'
                      },
                      typeName: {
                        id: 48211,
                        name: 'address',
                        nodeType: 'ElementaryTypeName',
                        src: '4943:7:36',
                        typeDescriptions: {}
                      }
                    },
                    id: 48214,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'typeConversion',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '4943:17:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address'
                    }
                  },
                  functionReturnParameters: 48169,
                  id: 48215,
                  nodeType: 'Return',
                  src: '4936:24:36'
                }
              ]
            },
            documentation: {
              id: 48161,
              nodeType: 'StructuredDocumentation',
              src: '4277:217:36',
              text: '@param tokenId The tokenID to which the Content is bound\n' +
                ' @param terms explain how the content will be used\n' +
                ' @return the adress of the new contract.\n' +
                ' @dev see the `DerivativeProduct` contract.'
            },
            functionSelector: '0d6314df',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'deriveToken',
            nameLocation: '4508:11:36',
            parameters: {
              id: 48166,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48163,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '4528:7:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48217,
                  src: '4520:15:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 48162,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '4520:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                },
                {
                  constant: false,
                  id: 48165,
                  mutability: 'mutable',
                  name: 'terms',
                  nameLocation: '4553:5:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48217,
                  src: '4537:21:36',
                  stateVariable: false,
                  storageLocation: 'calldata',
                  typeDescriptions: {
                    typeIdentifier: 't_string_calldata_ptr',
                    typeString: 'string'
                  },
                  typeName: {
                    id: 48164,
                    name: 'string',
                    nodeType: 'ElementaryTypeName',
                    src: '4537:6:36',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage_ptr',
                      typeString: 'string'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '4519:40:36'
            },
            returnParameters: {
              id: 48169,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48168,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 48217,
                  src: '4583:7:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address'
                  },
                  typeName: {
                    id: 48167,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '4583:7:36',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '4582:9:36'
            },
            scope: 48296,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48263,
            nodeType: 'FunctionDefinition',
            src: '5290:334:36',
            nodes: [],
            body: {
              id: 48262,
              nodeType: 'Block',
              src: '5340:284:36',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_address',
                      typeString: 'address'
                    },
                    id: 48228,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      arguments: [
                        {
                          id: 48224,
                          name: 'tokenId',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 48220,
                          src: '5361:7:36',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256'
                          }
                        }
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256'
                          }
                        ],
                        id: 48223,
                        name: 'ownerOf',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 45288,
                        src: '5353:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_function_internal_view$_t_uint256_$returns$_t_address_$',
                          typeString: 'function (uint256) view returns (address)'
                        }
                      },
                      id: 48225,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '5353:16:36',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address'
                      }
                    },
                    nodeType: 'BinaryOperation',
                    operator: '==',
                    rightExpression: {
                      expression: {
                        id: 48226,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '5373:3:36',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg'
                        }
                      },
                      id: 48227,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '5377:6:36',
                      memberName: 'sender',
                      nodeType: 'MemberAccess',
                      src: '5373:10:36',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address'
                      }
                    },
                    src: '5353:30:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  id: 48233,
                  nodeType: 'IfStatement',
                  src: '5350:76:36',
                  trueBody: {
                    expression: {
                      arguments: [
                        {
                          hexValue: '6f776e65722063616e6e6f7420636f7369676e',
                          id: 48230,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'string',
                          lValueRequested: false,
                          nodeType: 'Literal',
                          src: '5404:21:36',
                          typeDescriptions: {
                            typeIdentifier: 't_stringliteral_62400903ea6ccd07809a8e00bfcd2fdd1254b6c16c2977323cedd8703374b427',
                            typeString: 'literal_string "owner cannot cosign"'
                          },
                          value: 'owner cannot cosign'
                        }
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_stringliteral_62400903ea6ccd07809a8e00bfcd2fdd1254b6c16c2977323cedd8703374b427',
                            typeString: 'literal_string "owner cannot cosign"'
                          }
                        ],
                        id: 48229,
                        name: 'revert',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [ -19, -19 ],
                        referencedDeclaration: -19,
                        src: '5397:6:36',
                        typeDescriptions: {
                          typeIdentifier: 't_function_revert_pure$_t_string_memory_ptr_$returns$__$',
                          typeString: 'function (string memory) pure'
                        }
                      },
                      id: 48231,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '5397:29:36',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()'
                      }
                    },
                    id: 48232,
                    nodeType: 'ExpressionStatement',
                    src: '5397:29:36'
                  }
                },
                {
                  condition: {
                    baseExpression: {
                      expression: {
                        baseExpression: {
                          id: 48234,
                          name: 'cosigners',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 47963,
                          src: '5439:9:36',
                          typeDescriptions: {
                            typeIdentifier: 't_mapping$_t_uint256_$_t_struct$_Cosigners_$47947_storage_$',
                            typeString: 'mapping(uint256 => struct Cosigners storage ref)'
                          }
                        },
                        id: 48236,
                        indexExpression: {
                          id: 48235,
                          name: 'tokenId',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 48220,
                          src: '5449:7:36',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256'
                          }
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: 'IndexAccess',
                        src: '5439:18:36',
                        typeDescriptions: {
                          typeIdentifier: 't_struct$_Cosigners_$47947_storage',
                          typeString: 'struct Cosigners storage ref'
                        }
                      },
                      id: 48237,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '5458:7:36',
                      memberName: 'signers',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 47946,
                      src: '5439:26:36',
                      typeDescriptions: {
                        typeIdentifier: 't_mapping$_t_address_$_t_bool_$',
                        typeString: 'mapping(address => bool)'
                      }
                    },
                    id: 48240,
                    indexExpression: {
                      expression: {
                        id: 48238,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '5466:3:36',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg'
                        }
                      },
                      id: 48239,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '5470:6:36',
                      memberName: 'sender',
                      nodeType: 'MemberAccess',
                      src: '5466:10:36',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address'
                      }
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: 'IndexAccess',
                    src: '5439:38:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  id: 48245,
                  nodeType: 'IfStatement',
                  src: '5436:90:36',
                  trueBody: {
                    expression: {
                      arguments: [
                        {
                          hexValue: '63616e6e6f74207369676e207365766572616c2074696d6573',
                          id: 48242,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'string',
                          lValueRequested: false,
                          nodeType: 'Literal',
                          src: '5498:27:36',
                          typeDescriptions: {
                            typeIdentifier: 't_stringliteral_93b8073a38fee7fc77df0e643a7f9584c8d9bfc8c7f9bb91b87057aec4754062',
                            typeString: 'literal_string "cannot sign several times"'
                          },
                          value: 'cannot sign several times'
                        }
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_stringliteral_93b8073a38fee7fc77df0e643a7f9584c8d9bfc8c7f9bb91b87057aec4754062',
                            typeString: 'literal_string "cannot sign several times"'
                          }
                        ],
                        id: 48241,
                        name: 'revert',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [ -19, -19 ],
                        referencedDeclaration: -19,
                        src: '5491:6:36',
                        typeDescriptions: {
                          typeIdentifier: 't_function_revert_pure$_t_string_memory_ptr_$returns$__$',
                          typeString: 'function (string memory) pure'
                        }
                      },
                      id: 48243,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '5491:35:36',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()'
                      }
                    },
                    id: 48244,
                    nodeType: 'ExpressionStatement',
                    src: '5491:35:36'
                  }
                },
                {
                  expression: {
                    id: 48250,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: 'UnaryOperation',
                    operator: '++',
                    prefix: false,
                    src: '5536:26:36',
                    subExpression: {
                      expression: {
                        baseExpression: {
                          id: 48246,
                          name: 'cosigners',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 47963,
                          src: '5536:9:36',
                          typeDescriptions: {
                            typeIdentifier: 't_mapping$_t_uint256_$_t_struct$_Cosigners_$47947_storage_$',
                            typeString: 'mapping(uint256 => struct Cosigners storage ref)'
                          }
                        },
                        id: 48248,
                        indexExpression: {
                          id: 48247,
                          name: 'tokenId',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 48220,
                          src: '5546:7:36',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256'
                          }
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: 'IndexAccess',
                        src: '5536:18:36',
                        typeDescriptions: {
                          typeIdentifier: 't_struct$_Cosigners_$47947_storage',
                          typeString: 'struct Cosigners storage ref'
                        }
                      },
                      id: 48249,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberLocation: '5555:5:36',
                      memberName: 'total',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 47942,
                      src: '5536:24:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  id: 48251,
                  nodeType: 'ExpressionStatement',
                  src: '5536:26:36'
                },
                {
                  expression: {
                    id: 48260,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        expression: {
                          baseExpression: {
                            id: 48252,
                            name: 'cosigners',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 47963,
                            src: '5572:9:36',
                            typeDescriptions: {
                              typeIdentifier: 't_mapping$_t_uint256_$_t_struct$_Cosigners_$47947_storage_$',
                              typeString: 'mapping(uint256 => struct Cosigners storage ref)'
                            }
                          },
                          id: 48254,
                          indexExpression: {
                            id: 48253,
                            name: 'tokenId',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 48220,
                            src: '5582:7:36',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256'
                            }
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'IndexAccess',
                          src: '5572:18:36',
                          typeDescriptions: {
                            typeIdentifier: 't_struct$_Cosigners_$47947_storage',
                            typeString: 'struct Cosigners storage ref'
                          }
                        },
                        id: 48255,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '5591:7:36',
                        memberName: 'signers',
                        nodeType: 'MemberAccess',
                        referencedDeclaration: 47946,
                        src: '5572:26:36',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_address_$_t_bool_$',
                          typeString: 'mapping(address => bool)'
                        }
                      },
                      id: 48258,
                      indexExpression: {
                        expression: {
                          id: 48256,
                          name: 'msg',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: '5599:3:36',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_message',
                            typeString: 'msg'
                          }
                        },
                        id: 48257,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '5603:6:36',
                        memberName: 'sender',
                        nodeType: 'MemberAccess',
                        src: '5599:10:36',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        }
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '5572:38:36',
                      typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '74727565',
                      id: 48259,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'bool',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '5613:4:36',
                      typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' },
                      value: 'true'
                    },
                    src: '5572:45:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  id: 48261,
                  nodeType: 'ExpressionStatement',
                  src: '5572:45:36'
                }
              ]
            },
            documentation: {
              id: 48218,
              nodeType: 'StructuredDocumentation',
              src: '4973:312:36',
              text: '@notice authorizes a third party to sign the token,\n' +
                ' increasing the authenticity of the content.\n' +
                ' This also makes it possible to draw up a written contract\n' +
                ' between two or more parties, enabling, for example, an\n' +
                ' agreement to pay debts.\n' +
                ' @param tokenId The tokenID to sign.'
            },
            functionSelector: '2fb1b25f',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'sign',
            nameLocation: '5299:4:36',
            parameters: {
              id: 48221,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48220,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '5312:7:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48263,
                  src: '5304:15:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 48219,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '5304:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '5303:17:36'
            },
            returnParameters: {
              id: 48222,
              nodeType: 'ParameterList',
              parameters: [],
              src: '5340:0:36'
            },
            scope: 48296,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48281,
            nodeType: 'FunctionDefinition',
            src: '5891:153:36',
            nodes: [],
            body: {
              id: 48280,
              nodeType: 'Block',
              src: '5983:61:36',
              nodes: [],
              statements: [
                {
                  expression: {
                    baseExpression: {
                      expression: {
                        baseExpression: {
                          id: 48273,
                          name: 'cosigners',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 47963,
                          src: '6000:9:36',
                          typeDescriptions: {
                            typeIdentifier: 't_mapping$_t_uint256_$_t_struct$_Cosigners_$47947_storage_$',
                            typeString: 'mapping(uint256 => struct Cosigners storage ref)'
                          }
                        },
                        id: 48275,
                        indexExpression: {
                          id: 48274,
                          name: 'tokenId',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 48266,
                          src: '6010:7:36',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256'
                          }
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: 'IndexAccess',
                        src: '6000:18:36',
                        typeDescriptions: {
                          typeIdentifier: 't_struct$_Cosigners_$47947_storage',
                          typeString: 'struct Cosigners storage ref'
                        }
                      },
                      id: 48276,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '6019:7:36',
                      memberName: 'signers',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 47946,
                      src: '6000:26:36',
                      typeDescriptions: {
                        typeIdentifier: 't_mapping$_t_address_$_t_bool_$',
                        typeString: 'mapping(address => bool)'
                      }
                    },
                    id: 48278,
                    indexExpression: {
                      id: 48277,
                      name: 'candidate',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48268,
                      src: '6027:9:36',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address'
                      }
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: 'IndexAccess',
                    src: '6000:37:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  functionReturnParameters: 48272,
                  id: 48279,
                  nodeType: 'Return',
                  src: '5993:44:36'
                }
              ]
            },
            documentation: {
              id: 48264,
              nodeType: 'StructuredDocumentation',
              src: '5630:256:36',
              text: '@notice Query if an address is cosigner of the content\n' +
                ' bound to a specific token\n' +
                ' @param tokenId The tokenID to which the Content is bound\n' +
                ' @param candidate The address to be checked\n' +
                ' @return true if the address is cosigner'
            },
            functionSelector: '48bcbd2d',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'isSigner',
            nameLocation: '5900:8:36',
            parameters: {
              id: 48269,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48266,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '5917:7:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48281,
                  src: '5909:15:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 48265,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '5909:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                },
                {
                  constant: false,
                  id: 48268,
                  mutability: 'mutable',
                  name: 'candidate',
                  nameLocation: '5934:9:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48281,
                  src: '5926:17:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address'
                  },
                  typeName: {
                    id: 48267,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '5926:7:36',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '5908:36:36'
            },
            returnParameters: {
              id: 48272,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48271,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 48281,
                  src: '5973:4:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' },
                  typeName: {
                    id: 48270,
                    name: 'bool',
                    nodeType: 'ElementaryTypeName',
                    src: '5973:4:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  visibility: 'internal'
                }
              ],
              src: '5972:6:36'
            },
            scope: 48296,
            stateMutability: 'view',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48295,
            nodeType: 'FunctionDefinition',
            src: '6234:130:36',
            nodes: [],
            body: {
              id: 48294,
              nodeType: 'Block',
              src: '6316:48:36',
              nodes: [],
              statements: [
                {
                  expression: {
                    expression: {
                      baseExpression: {
                        id: 48289,
                        name: 'cosigners',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 47963,
                        src: '6333:9:36',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_uint256_$_t_struct$_Cosigners_$47947_storage_$',
                          typeString: 'mapping(uint256 => struct Cosigners storage ref)'
                        }
                      },
                      id: 48291,
                      indexExpression: {
                        id: 48290,
                        name: 'tokenId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48284,
                        src: '6343:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'IndexAccess',
                      src: '6333:18:36',
                      typeDescriptions: {
                        typeIdentifier: 't_struct$_Cosigners_$47947_storage',
                        typeString: 'struct Cosigners storage ref'
                      }
                    },
                    id: 48292,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberLocation: '6352:5:36',
                    memberName: 'total',
                    nodeType: 'MemberAccess',
                    referencedDeclaration: 47942,
                    src: '6333:24:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  functionReturnParameters: 48288,
                  id: 48293,
                  nodeType: 'Return',
                  src: '6326:31:36'
                }
              ]
            },
            documentation: {
              id: 48282,
              nodeType: 'StructuredDocumentation',
              src: '6050:179:36',
              text: '@notice Query the number of cosigner of a specific token\n' +
                ' @param tokenId The tokenID to which the Content is bound\n' +
                ' @return the number of cosigner for this token'
            },
            functionSelector: '14257ff5',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'countCosigners',
            nameLocation: '6243:14:36',
            parameters: {
              id: 48285,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48284,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '6266:7:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48295,
                  src: '6258:15:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 48283,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '6258:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '6257:17:36'
            },
            returnParameters: {
              id: 48288,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48287,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 48295,
                  src: '6303:7:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 48286,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '6303:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '6302:9:36'
            },
            scope: 48296,
            stateMutability: 'view',
            virtual: false,
            visibility: 'public'
          }
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 47949,
              name: 'ERC721',
              nameLocations: [ '862:6:36' ],
              nodeType: 'IdentifierPath',
              referencedDeclaration: 46155,
              src: '862:6:36'
            },
            id: 47950,
            nodeType: 'InheritanceSpecifier',
            src: '862:6:36'
          },
          {
            baseName: {
              id: 47951,
              name: 'ERC721URIStorage',
              nameLocations: [ '870:16:36' ],
              nodeType: 'IdentifierPath',
              referencedDeclaration: 46416,
              src: '870:16:36'
            },
            id: 47952,
            nodeType: 'InheritanceSpecifier',
            src: '870:16:36'
          }
        ],
        canonicalName: 'CryptoStamp',
        contractDependencies: [ 48526 ],
        contractKind: 'contract',
        documentation: {
          id: 47948,
          nodeType: 'StructuredDocumentation',
          src: '676:162:36',
          text: '@title CryptoStamp smart contract.\n' +
            ' @notice An ERC-721 contract aimed at protecting a writtng with an\n' +
            ' NFT on the blockchain.\n' +
            ' @author Mickaël Viey'
        },
        fullyImplemented: true,
        linearizedBaseContracts: [
          48296, 46416, 46155,
          45021, 46444, 44927,
          46272, 46753, 46765,
          46474
        ],
        name: 'CryptoStamp',
        nameLocation: '847:11:36',
        scope: 48527,
        usedErrors: [
          44979, 44984,
          44993, 44998,
          45003, 45010,
          45015, 45020
        ],
        usedEvents: [ 44919, 44926, 46171, 46180, 46189 ]
      },
      {
        id: 48301,
        nodeType: 'EnumDefinition',
        src: '6435:200:36',
        nodes: [],
        canonicalName: 'ContractStatus',
        documentation: {
          id: 48297,
          nodeType: 'StructuredDocumentation',
          src: '6369:66:36',
          text: '@notice represents the status of a DerivativeProduct contract'
        },
        members: [
          {
            id: 48298,
            name: 'InProgress',
            nameLocation: '6461:10:36',
            nodeType: 'EnumValue',
            src: '6461:10:36'
          },
          {
            id: 48299,
            name: 'Accepted',
            nameLocation: '6527:8:36',
            nodeType: 'EnumValue',
            src: '6527:8:36'
          },
          {
            id: 48300,
            name: 'Refused',
            nameLocation: '6584:7:36',
            nodeType: 'EnumValue',
            src: '6584:7:36'
          }
        ],
        name: 'ContractStatus',
        nameLocation: '6440:14:36'
      },
      {
        id: 48526,
        nodeType: 'ContractDefinition',
        src: '6638:2460:36',
        nodes: [
          {
            id: 48304,
            nodeType: 'VariableDeclaration',
            src: '6726:32:36',
            nodes: [],
            constant: false,
            documentation: {
              id: 48302,
              nodeType: 'StructuredDocumentation',
              src: '6672:49:36',
              text: '@notice the tokenId the contract is bound to.'
            },
            functionSelector: '17d70f7c',
            mutability: 'immutable',
            name: 'tokenId',
            nameLocation: '6751:7:36',
            scope: 48526,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: { typeIdentifier: 't_uint256', typeString: 'uint256' },
            typeName: {
              id: 48303,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '6726:7:36',
              typeDescriptions: { typeIdentifier: 't_uint256', typeString: 'uint256' }
            },
            visibility: 'public'
          },
          {
            id: 48307,
            nodeType: 'VariableDeclaration',
            src: '6804:38:36',
            nodes: [],
            constant: false,
            documentation: {
              id: 48305,
              nodeType: 'StructuredDocumentation',
              src: '6764:35:36',
              text: '@notice the owner of the token.'
            },
            functionSelector: '8da5cb5b',
            mutability: 'immutable',
            name: 'owner',
            nameLocation: '6837:5:36',
            scope: 48526,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_address_payable',
              typeString: 'address payable'
            },
            typeName: {
              id: 48306,
              name: 'address',
              nodeType: 'ElementaryTypeName',
              src: '6804:15:36',
              stateMutability: 'payable',
              typeDescriptions: {
                typeIdentifier: 't_address_payable',
                typeString: 'address payable'
              }
            },
            visibility: 'public'
          },
          {
            id: 48310,
            nodeType: 'VariableDeclaration',
            src: '6912:42:36',
            nodes: [],
            constant: false,
            documentation: {
              id: 48308,
              nodeType: 'StructuredDocumentation',
              src: '6848:59:36',
              text: '@notice the address of the claimant to the right of use'
            },
            functionSelector: '66d003ac',
            mutability: 'immutable',
            name: 'recipient',
            nameLocation: '6945:9:36',
            scope: 48526,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_address_payable',
              typeString: 'address payable'
            },
            typeName: {
              id: 48309,
              name: 'address',
              nodeType: 'ElementaryTypeName',
              src: '6912:15:36',
              stateMutability: 'payable',
              typeDescriptions: {
                typeIdentifier: 't_address_payable',
                typeString: 'address payable'
              }
            },
            visibility: 'public'
          },
          {
            id: 48313,
            nodeType: 'VariableDeclaration',
            src: '6991:19:36',
            nodes: [],
            constant: false,
            documentation: {
              id: 48311,
              nodeType: 'StructuredDocumentation',
              src: '6960:26:36',
              text: '@notice terms of usage'
            },
            functionSelector: 'd5025625',
            mutability: 'mutable',
            name: 'terms',
            nameLocation: '7005:5:36',
            scope: 48526,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_string_storage',
              typeString: 'string'
            },
            typeName: {
              id: 48312,
              name: 'string',
              nodeType: 'ElementaryTypeName',
              src: '6991:6:36',
              typeDescriptions: {
                typeIdentifier: 't_string_storage_ptr',
                typeString: 'string'
              }
            },
            visibility: 'public'
          },
          {
            id: 48316,
            nodeType: 'VariableDeclaration',
            src: '7075:27:36',
            nodes: [],
            constant: false,
            documentation: {
              id: 48314,
              nodeType: 'StructuredDocumentation',
              src: '7016:54:36',
              text: '@notice The amount paid to the owner if he accepts'
            },
            functionSelector: 'ad7a672f',
            mutability: 'mutable',
            name: 'totalBalance',
            nameLocation: '7090:12:36',
            scope: 48526,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: { typeIdentifier: 't_uint256', typeString: 'uint256' },
            typeName: {
              id: 48315,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '7075:7:36',
              typeDescriptions: { typeIdentifier: 't_uint256', typeString: 'uint256' }
            },
            visibility: 'public'
          },
          {
            id: 48320,
            nodeType: 'VariableDeclaration',
            src: '7108:32:36',
            nodes: [],
            constant: false,
            mutability: 'mutable',
            name: 'bids',
            nameLocation: '7136:4:36',
            scope: 48526,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_mapping$_t_address_$_t_uint256_$',
              typeString: 'mapping(address => uint256)'
            },
            typeName: {
              id: 48319,
              keyName: '',
              keyNameLocation: '-1:-1:-1',
              keyType: {
                id: 48317,
                name: 'address',
                nodeType: 'ElementaryTypeName',
                src: '7116:7:36',
                typeDescriptions: { typeIdentifier: 't_address', typeString: 'address' }
              },
              nodeType: 'Mapping',
              src: '7108:27:36',
              typeDescriptions: {
                typeIdentifier: 't_mapping$_t_address_$_t_uint256_$',
                typeString: 'mapping(address => uint256)'
              },
              valueName: '',
              valueNameLocation: '-1:-1:-1',
              valueType: {
                id: 48318,
                name: 'uint256',
                nodeType: 'ElementaryTypeName',
                src: '7127:7:36',
                typeDescriptions: { typeIdentifier: 't_uint256', typeString: 'uint256' }
              }
            },
            visibility: 'internal'
          },
          {
            id: 48323,
            nodeType: 'VariableDeclaration',
            src: '7147:28:36',
            nodes: [],
            constant: false,
            functionSelector: '200d2ed2',
            mutability: 'mutable',
            name: 'status',
            nameLocation: '7169:6:36',
            scope: 48526,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_enum$_ContractStatus_$48301',
              typeString: 'enum ContractStatus'
            },
            typeName: {
              id: 48322,
              nodeType: 'UserDefinedTypeName',
              pathNode: {
                id: 48321,
                name: 'ContractStatus',
                nameLocations: [ '7147:14:36' ],
                nodeType: 'IdentifierPath',
                referencedDeclaration: 48301,
                src: '7147:14:36'
              },
              referencedDeclaration: 48301,
              src: '7147:14:36',
              typeDescriptions: {
                typeIdentifier: 't_enum$_ContractStatus_$48301',
                typeString: 'enum ContractStatus'
              }
            },
            visibility: 'public'
          },
          {
            id: 48375,
            nodeType: 'FunctionDefinition',
            src: '7182:419:36',
            nodes: [],
            body: {
              id: 48374,
              nodeType: 'Block',
              src: '7324:277:36',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        },
                        id: 48340,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 48335,
                          name: 'owner_',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 48327,
                          src: '7342:6:36',
                          typeDescriptions: {
                            typeIdentifier: 't_address_payable',
                            typeString: 'address payable'
                          }
                        },
                        nodeType: 'BinaryOperation',
                        operator: '!=',
                        rightExpression: {
                          arguments: [
                            {
                              hexValue: '30',
                              id: 48338,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '7360:1:36',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0'
                              },
                              value: '0'
                            }
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0'
                              }
                            ],
                            id: 48337,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: 'ElementaryTypeNameExpression',
                            src: '7352:7:36',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_address_$',
                              typeString: 'type(address)'
                            },
                            typeName: {
                              id: 48336,
                              name: 'address',
                              nodeType: 'ElementaryTypeName',
                              src: '7352:7:36',
                              typeDescriptions: {}
                            }
                          },
                          id: 48339,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'typeConversion',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '7352:10:36',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address'
                          }
                        },
                        src: '7342:20:36',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool'
                        }
                      },
                      {
                        hexValue: '696e76616c6964206f776e65722061646472657373',
                        id: 48341,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '7364:23:36',
                        typeDescriptions: {
                          typeIdentifier: 't_stringliteral_096e7136b7c57bd8569fdbf319cbfc4e25d63e415c3fa5e0b1e0424c8fe790bd',
                          typeString: 'literal_string "invalid owner address"'
                        },
                        value: 'invalid owner address'
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool'
                        },
                        {
                          typeIdentifier: 't_stringliteral_096e7136b7c57bd8569fdbf319cbfc4e25d63e415c3fa5e0b1e0424c8fe790bd',
                          typeString: 'literal_string "invalid owner address"'
                        }
                      ],
                      id: 48334,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [ -18, -18 ],
                      referencedDeclaration: -18,
                      src: '7334:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure'
                      }
                    },
                    id: 48342,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '7334:54:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()'
                    }
                  },
                  id: 48343,
                  nodeType: 'ExpressionStatement',
                  src: '7334:54:36'
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        },
                        id: 48350,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 48345,
                          name: 'recipient_',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 48329,
                          src: '7406:10:36',
                          typeDescriptions: {
                            typeIdentifier: 't_address_payable',
                            typeString: 'address payable'
                          }
                        },
                        nodeType: 'BinaryOperation',
                        operator: '!=',
                        rightExpression: {
                          arguments: [
                            {
                              hexValue: '30',
                              id: 48348,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'number',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '7428:1:36',
                              typeDescriptions: {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0'
                              },
                              value: '0'
                            }
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_rational_0_by_1',
                                typeString: 'int_const 0'
                              }
                            ],
                            id: 48347,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: 'ElementaryTypeNameExpression',
                            src: '7420:7:36',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_address_$',
                              typeString: 'type(address)'
                            },
                            typeName: {
                              id: 48346,
                              name: 'address',
                              nodeType: 'ElementaryTypeName',
                              src: '7420:7:36',
                              typeDescriptions: {}
                            }
                          },
                          id: 48349,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'typeConversion',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '7420:10:36',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address'
                          }
                        },
                        src: '7406:24:36',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool'
                        }
                      },
                      {
                        hexValue: '696e76616c696420726563697069656e742061646472657373',
                        id: 48351,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '7432:27:36',
                        typeDescriptions: {
                          typeIdentifier: 't_stringliteral_33381e06fa894e1567a62eb0564225fe395282d25975f1fad0d4c1cc234a87cb',
                          typeString: 'literal_string "invalid recipient address"'
                        },
                        value: 'invalid recipient address'
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool'
                        },
                        {
                          typeIdentifier: 't_stringliteral_33381e06fa894e1567a62eb0564225fe395282d25975f1fad0d4c1cc234a87cb',
                          typeString: 'literal_string "invalid recipient address"'
                        }
                      ],
                      id: 48344,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [ -18, -18 ],
                      referencedDeclaration: -18,
                      src: '7398:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure'
                      }
                    },
                    id: 48352,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '7398:62:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()'
                    }
                  },
                  id: 48353,
                  nodeType: 'ExpressionStatement',
                  src: '7398:62:36'
                },
                {
                  expression: {
                    id: 48356,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 48354,
                      name: 'terms',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48313,
                      src: '7470:5:36',
                      typeDescriptions: {
                        typeIdentifier: 't_string_storage',
                        typeString: 'string storage ref'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 48355,
                      name: 'terms_',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48331,
                      src: '7478:6:36',
                      typeDescriptions: {
                        typeIdentifier: 't_string_memory_ptr',
                        typeString: 'string memory'
                      }
                    },
                    src: '7470:14:36',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage',
                      typeString: 'string storage ref'
                    }
                  },
                  id: 48357,
                  nodeType: 'ExpressionStatement',
                  src: '7470:14:36'
                },
                {
                  expression: {
                    id: 48360,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 48358,
                      name: 'tokenId',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48304,
                      src: '7494:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 48359,
                      name: 'tokenId_',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48325,
                      src: '7504:8:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    src: '7494:18:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  id: 48361,
                  nodeType: 'ExpressionStatement',
                  src: '7494:18:36'
                },
                {
                  expression: {
                    id: 48364,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 48362,
                      name: 'owner',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48307,
                      src: '7522:5:36',
                      typeDescriptions: {
                        typeIdentifier: 't_address_payable',
                        typeString: 'address payable'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 48363,
                      name: 'owner_',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48327,
                      src: '7530:6:36',
                      typeDescriptions: {
                        typeIdentifier: 't_address_payable',
                        typeString: 'address payable'
                      }
                    },
                    src: '7522:14:36',
                    typeDescriptions: {
                      typeIdentifier: 't_address_payable',
                      typeString: 'address payable'
                    }
                  },
                  id: 48365,
                  nodeType: 'ExpressionStatement',
                  src: '7522:14:36'
                },
                {
                  expression: {
                    id: 48368,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 48366,
                      name: 'recipient',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48310,
                      src: '7546:9:36',
                      typeDescriptions: {
                        typeIdentifier: 't_address_payable',
                        typeString: 'address payable'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 48367,
                      name: 'recipient_',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48329,
                      src: '7558:10:36',
                      typeDescriptions: {
                        typeIdentifier: 't_address_payable',
                        typeString: 'address payable'
                      }
                    },
                    src: '7546:22:36',
                    typeDescriptions: {
                      typeIdentifier: 't_address_payable',
                      typeString: 'address payable'
                    }
                  },
                  id: 48369,
                  nodeType: 'ExpressionStatement',
                  src: '7546:22:36'
                },
                {
                  expression: {
                    id: 48372,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 48370,
                      name: 'totalBalance',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48316,
                      src: '7578:12:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '30',
                      id: 48371,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '7593:1:36',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0'
                      },
                      value: '0'
                    },
                    src: '7578:16:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  id: 48373,
                  nodeType: 'ExpressionStatement',
                  src: '7578:16:36'
                }
              ]
            },
            implemented: true,
            kind: 'constructor',
            modifiers: [],
            name: '',
            nameLocation: '-1:-1:-1',
            parameters: {
              id: 48332,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 48325,
                  mutability: 'mutable',
                  name: 'tokenId_',
                  nameLocation: '7211:8:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48375,
                  src: '7203:16:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256'
                  },
                  typeName: {
                    id: 48324,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '7203:7:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  visibility: 'internal'
                },
                {
                  constant: false,
                  id: 48327,
                  mutability: 'mutable',
                  name: 'owner_',
                  nameLocation: '7245:6:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48375,
                  src: '7229:22:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address_payable',
                    typeString: 'address payable'
                  },
                  typeName: {
                    id: 48326,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '7229:15:36',
                    stateMutability: 'payable',
                    typeDescriptions: {
                      typeIdentifier: 't_address_payable',
                      typeString: 'address payable'
                    }
                  },
                  visibility: 'internal'
                },
                {
                  constant: false,
                  id: 48329,
                  mutability: 'mutable',
                  name: 'recipient_',
                  nameLocation: '7277:10:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48375,
                  src: '7261:26:36',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address_payable',
                    typeString: 'address payable'
                  },
                  typeName: {
                    id: 48328,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '7261:15:36',
                    stateMutability: 'payable',
                    typeDescriptions: {
                      typeIdentifier: 't_address_payable',
                      typeString: 'address payable'
                    }
                  },
                  visibility: 'internal'
                },
                {
                  constant: false,
                  id: 48331,
                  mutability: 'mutable',
                  name: 'terms_',
                  nameLocation: '7311:6:36',
                  nodeType: 'VariableDeclaration',
                  scope: 48375,
                  src: '7297:20:36',
                  stateVariable: false,
                  storageLocation: 'memory',
                  typeDescriptions: {
                    typeIdentifier: 't_string_memory_ptr',
                    typeString: 'string'
                  },
                  typeName: {
                    id: 48330,
                    name: 'string',
                    nodeType: 'ElementaryTypeName',
                    src: '7297:6:36',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage_ptr',
                      typeString: 'string'
                    }
                  },
                  visibility: 'internal'
                }
              ],
              src: '7193:130:36'
            },
            returnParameters: {
              id: 48333,
              nodeType: 'ParameterList',
              parameters: [],
              src: '7324:0:36'
            },
            scope: 48526,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48388,
            nodeType: 'ModifierDefinition',
            src: '7607:117:36',
            nodes: [],
            body: {
              id: 48387,
              nodeType: 'Block',
              src: '7631:93:36',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_enum$_ContractStatus_$48301',
                      typeString: 'enum ContractStatus'
                    },
                    id: 48380,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 48377,
                      name: 'status',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48323,
                      src: '7644:6:36',
                      typeDescriptions: {
                        typeIdentifier: 't_enum$_ContractStatus_$48301',
                        typeString: 'enum ContractStatus'
                      }
                    },
                    nodeType: 'BinaryOperation',
                    operator: '!=',
                    rightExpression: {
                      expression: {
                        id: 48378,
                        name: 'ContractStatus',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48301,
                        src: '7654:14:36',
                        typeDescriptions: {
                          typeIdentifier: 't_type$_t_enum$_ContractStatus_$48301_$',
                          typeString: 'type(enum ContractStatus)'
                        }
                      },
                      id: 48379,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      memberLocation: '7669:10:36',
                      memberName: 'InProgress',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 48298,
                      src: '7654:25:36',
                      typeDescriptions: {
                        typeIdentifier: 't_enum$_ContractStatus_$48301',
                        typeString: 'enum ContractStatus'
                      }
                    },
                    src: '7644:35:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  id: 48385,
                  nodeType: 'IfStatement',
                  src: '7641:65:36',
                  trueBody: {
                    expression: {
                      arguments: [
                        {
                          hexValue: '62696464696e67206973206f766572',
                          id: 48382,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'string',
                          lValueRequested: false,
                          nodeType: 'Literal',
                          src: '7688:17:36',
                          typeDescriptions: {
                            typeIdentifier: 't_stringliteral_752e957de5dab4b7af5053dd0fd931cd8735fc122e86837c070d735c57cb7ee1',
                            typeString: 'literal_string "bidding is over"'
                          },
                          value: 'bidding is over'
                        }
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_stringliteral_752e957de5dab4b7af5053dd0fd931cd8735fc122e86837c070d735c57cb7ee1',
                            typeString: 'literal_string "bidding is over"'
                          }
                        ],
                        id: 48381,
                        name: 'revert',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [ -19, -19 ],
                        referencedDeclaration: -19,
                        src: '7681:6:36',
                        typeDescriptions: {
                          typeIdentifier: 't_function_revert_pure$_t_string_memory_ptr_$returns$__$',
                          typeString: 'function (string memory) pure'
                        }
                      },
                      id: 48383,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '7681:25:36',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()'
                      }
                    },
                    id: 48384,
                    nodeType: 'ExpressionStatement',
                    src: '7681:25:36'
                  }
                },
                {
                  id: 48386,
                  nodeType: 'PlaceholderStatement',
                  src: '7716:1:36'
                }
              ]
            },
            name: 'whenInProgress',
            nameLocation: '7616:14:36',
            parameters: {
              id: 48376,
              nodeType: 'ParameterList',
              parameters: [],
              src: '7631:0:36'
            },
            virtual: false,
            visibility: 'internal'
          },
          {
            id: 48401,
            nodeType: 'ModifierDefinition',
            src: '7730:94:36',
            nodes: [],
            body: {
              id: 48400,
              nodeType: 'Block',
              src: '7749:75:36',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_address',
                      typeString: 'address'
                    },
                    id: 48393,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 48390,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '7762:3:36',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg'
                        }
                      },
                      id: 48391,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '7766:6:36',
                      memberName: 'sender',
                      nodeType: 'MemberAccess',
                      src: '7762:10:36',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address'
                      }
                    },
                    nodeType: 'BinaryOperation',
                    operator: '!=',
                    rightExpression: {
                      id: 48392,
                      name: 'owner',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48307,
                      src: '7776:5:36',
                      typeDescriptions: {
                        typeIdentifier: 't_address_payable',
                        typeString: 'address payable'
                      }
                    },
                    src: '7762:19:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  id: 48398,
                  nodeType: 'IfStatement',
                  src: '7759:47:36',
                  trueBody: {
                    expression: {
                      arguments: [
                        {
                          hexValue: '6e6f7420746865206f776e6572',
                          id: 48395,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'string',
                          lValueRequested: false,
                          nodeType: 'Literal',
                          src: '7790:15:36',
                          typeDescriptions: {
                            typeIdentifier: 't_stringliteral_09ee694bb6d0f66081e15dd53293c7f941705ae2fd8f9732918eb9f8e2ff3219',
                            typeString: 'literal_string "not the owner"'
                          },
                          value: 'not the owner'
                        }
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_stringliteral_09ee694bb6d0f66081e15dd53293c7f941705ae2fd8f9732918eb9f8e2ff3219',
                            typeString: 'literal_string "not the owner"'
                          }
                        ],
                        id: 48394,
                        name: 'revert',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [ -19, -19 ],
                        referencedDeclaration: -19,
                        src: '7783:6:36',
                        typeDescriptions: {
                          typeIdentifier: 't_function_revert_pure$_t_string_memory_ptr_$returns$__$',
                          typeString: 'function (string memory) pure'
                        }
                      },
                      id: 48396,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '7783:23:36',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()'
                      }
                    },
                    id: 48397,
                    nodeType: 'ExpressionStatement',
                    src: '7783:23:36'
                  }
                },
                {
                  id: 48399,
                  nodeType: 'PlaceholderStatement',
                  src: '7816:1:36'
                }
              ]
            },
            name: 'onlyOwner',
            nameLocation: '7739:9:36',
            parameters: {
              id: 48389,
              nodeType: 'ParameterList',
              parameters: [],
              src: '7749:0:36'
            },
            virtual: false,
            visibility: 'internal'
          },
          {
            id: 48424,
            nodeType: 'FunctionDefinition',
            src: '7897:159:36',
            nodes: [],
            body: {
              id: 48423,
              nodeType: 'Block',
              src: '7942:114:36',
              nodes: [],
              statements: [
                {
                  assignments: [ 48408 ],
                  declarations: [
                    {
                      constant: false,
                      id: 48408,
                      mutability: 'mutable',
                      name: 'ammount',
                      nameLocation: '7960:7:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48423,
                      src: '7952:15:36',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      },
                      typeName: {
                        id: 48407,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '7952:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      },
                      visibility: 'internal'
                    }
                  ],
                  id: 48411,
                  initialValue: {
                    expression: {
                      id: 48409,
                      name: 'msg',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: -15,
                      src: '7970:3:36',
                      typeDescriptions: {
                        typeIdentifier: 't_magic_message',
                        typeString: 'msg'
                      }
                    },
                    id: 48410,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    memberLocation: '7974:5:36',
                    memberName: 'value',
                    nodeType: 'MemberAccess',
                    src: '7970:9:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '7952:27:36'
                },
                {
                  expression: {
                    id: 48417,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 48412,
                        name: 'bids',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48320,
                        src: '7989:4:36',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_address_$_t_uint256_$',
                          typeString: 'mapping(address => uint256)'
                        }
                      },
                      id: 48415,
                      indexExpression: {
                        expression: {
                          id: 48413,
                          name: 'msg',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: '7994:3:36',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_message',
                            typeString: 'msg'
                          }
                        },
                        id: 48414,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '7998:6:36',
                        memberName: 'sender',
                        nodeType: 'MemberAccess',
                        src: '7994:10:36',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        }
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '7989:16:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '+=',
                    rightHandSide: {
                      id: 48416,
                      name: 'ammount',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48408,
                      src: '8009:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    src: '7989:27:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  id: 48418,
                  nodeType: 'ExpressionStatement',
                  src: '7989:27:36'
                },
                {
                  expression: {
                    id: 48421,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 48419,
                      name: 'totalBalance',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48316,
                      src: '8026:12:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '+=',
                    rightHandSide: {
                      id: 48420,
                      name: 'ammount',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48408,
                      src: '8042:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    src: '8026:23:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  id: 48422,
                  nodeType: 'ExpressionStatement',
                  src: '8026:23:36'
                }
              ]
            },
            documentation: {
              id: 48402,
              nodeType: 'StructuredDocumentation',
              src: '7830:62:36',
              text: '@notice allows supporters of the project to pay for usage.'
            },
            functionSelector: '1998aeef',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 48405,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 48404,
                  name: 'whenInProgress',
                  nameLocations: [ '7927:14:36' ],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 48388,
                  src: '7927:14:36'
                },
                nodeType: 'ModifierInvocation',
                src: '7927:14:36'
              }
            ],
            name: 'bid',
            nameLocation: '7906:3:36',
            parameters: {
              id: 48403,
              nodeType: 'ParameterList',
              parameters: [],
              src: '7909:2:36'
            },
            returnParameters: {
              id: 48406,
              nodeType: 'ParameterList',
              parameters: [],
              src: '7942:0:36'
            },
            scope: 48526,
            stateMutability: 'payable',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48478,
            nodeType: 'FunctionDefinition',
            src: '8213:343:36',
            nodes: [],
            body: {
              id: 48477,
              nodeType: 'Block',
              src: '8240:316:36',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_enum$_ContractStatus_$48301',
                          typeString: 'enum ContractStatus'
                        },
                        id: 48432,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 48429,
                          name: 'status',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 48323,
                          src: '8258:6:36',
                          typeDescriptions: {
                            typeIdentifier: 't_enum$_ContractStatus_$48301',
                            typeString: 'enum ContractStatus'
                          }
                        },
                        nodeType: 'BinaryOperation',
                        operator: '!=',
                        rightExpression: {
                          expression: {
                            id: 48430,
                            name: 'ContractStatus',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 48301,
                            src: '8268:14:36',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_enum$_ContractStatus_$48301_$',
                              typeString: 'type(enum ContractStatus)'
                            }
                          },
                          id: 48431,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          memberLocation: '8283:8:36',
                          memberName: 'Accepted',
                          nodeType: 'MemberAccess',
                          referencedDeclaration: 48299,
                          src: '8268:23:36',
                          typeDescriptions: {
                            typeIdentifier: 't_enum$_ContractStatus_$48301',
                            typeString: 'enum ContractStatus'
                          }
                        },
                        src: '8258:33:36',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool'
                        }
                      ],
                      id: 48428,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [ -18, -18 ],
                      referencedDeclaration: -18,
                      src: '8250:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_require_pure$_t_bool_$returns$__$',
                        typeString: 'function (bool) pure'
                      }
                    },
                    id: 48433,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '8250:42:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()'
                    }
                  },
                  id: 48434,
                  nodeType: 'ExpressionStatement',
                  src: '8250:42:36'
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        },
                        id: 48441,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          baseExpression: {
                            id: 48436,
                            name: 'bids',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 48320,
                            src: '8310:4:36',
                            typeDescriptions: {
                              typeIdentifier: 't_mapping$_t_address_$_t_uint256_$',
                              typeString: 'mapping(address => uint256)'
                            }
                          },
                          id: 48439,
                          indexExpression: {
                            expression: {
                              id: 48437,
                              name: 'msg',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: -15,
                              src: '8315:3:36',
                              typeDescriptions: {
                                typeIdentifier: 't_magic_message',
                                typeString: 'msg'
                              }
                            },
                            id: 48438,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: '8319:6:36',
                            memberName: 'sender',
                            nodeType: 'MemberAccess',
                            src: '8315:10:36',
                            typeDescriptions: {
                              typeIdentifier: 't_address',
                              typeString: 'address'
                            }
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'IndexAccess',
                          src: '8310:16:36',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256'
                          }
                        },
                        nodeType: 'BinaryOperation',
                        operator: '>',
                        rightExpression: {
                          hexValue: '30',
                          id: 48440,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'number',
                          lValueRequested: false,
                          nodeType: 'Literal',
                          src: '8329:1:36',
                          typeDescriptions: {
                            typeIdentifier: 't_rational_0_by_1',
                            typeString: 'int_const 0'
                          },
                          value: '0'
                        },
                        src: '8310:20:36',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool'
                        }
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool'
                        }
                      ],
                      id: 48435,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [ -18, -18 ],
                      referencedDeclaration: -18,
                      src: '8302:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_require_pure$_t_bool_$returns$__$',
                        typeString: 'function (bool) pure'
                      }
                    },
                    id: 48442,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '8302:29:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()'
                    }
                  },
                  id: 48443,
                  nodeType: 'ExpressionStatement',
                  src: '8302:29:36'
                },
                {
                  assignments: [ 48445 ],
                  declarations: [
                    {
                      constant: false,
                      id: 48445,
                      mutability: 'mutable',
                      name: 'ammount',
                      nameLocation: '8349:7:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48477,
                      src: '8341:15:36',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      },
                      typeName: {
                        id: 48444,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '8341:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256'
                        }
                      },
                      visibility: 'internal'
                    }
                  ],
                  id: 48450,
                  initialValue: {
                    baseExpression: {
                      id: 48446,
                      name: 'bids',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48320,
                      src: '8359:4:36',
                      typeDescriptions: {
                        typeIdentifier: 't_mapping$_t_address_$_t_uint256_$',
                        typeString: 'mapping(address => uint256)'
                      }
                    },
                    id: 48449,
                    indexExpression: {
                      expression: {
                        id: 48447,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '8364:3:36',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg'
                        }
                      },
                      id: 48448,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '8368:6:36',
                      memberName: 'sender',
                      nodeType: 'MemberAccess',
                      src: '8364:10:36',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address'
                      }
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: 'IndexAccess',
                    src: '8359:16:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '8341:34:36'
                },
                {
                  expression: {
                    id: 48453,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 48451,
                      name: 'totalBalance',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48316,
                      src: '8385:12:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '-=',
                    rightHandSide: {
                      id: 48452,
                      name: 'ammount',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48445,
                      src: '8401:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    src: '8385:23:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  id: 48454,
                  nodeType: 'ExpressionStatement',
                  src: '8385:23:36'
                },
                {
                  expression: {
                    id: 48460,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 48455,
                        name: 'bids',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48320,
                        src: '8418:4:36',
                        typeDescriptions: {
                          typeIdentifier: 't_mapping$_t_address_$_t_uint256_$',
                          typeString: 'mapping(address => uint256)'
                        }
                      },
                      id: 48458,
                      indexExpression: {
                        expression: {
                          id: 48456,
                          name: 'msg',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: '8423:3:36',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_message',
                            typeString: 'msg'
                          }
                        },
                        id: 48457,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '8427:6:36',
                        memberName: 'sender',
                        nodeType: 'MemberAccess',
                        src: '8423:10:36',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address'
                        }
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '8418:16:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      hexValue: '30',
                      id: 48459,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '8437:1:36',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0'
                      },
                      value: '0'
                    },
                    src: '8418:20:36',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    }
                  },
                  id: 48461,
                  nodeType: 'ExpressionStatement',
                  src: '8418:20:36'
                },
                {
                  assignments: [ 48463, null ],
                  declarations: [
                    {
                      constant: false,
                      id: 48463,
                      mutability: 'mutable',
                      name: 'success',
                      nameLocation: '8454:7:36',
                      nodeType: 'VariableDeclaration',
                      scope: 48477,
                      src: '8449:12:36',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' },
                      typeName: {
                        id: 48462,
                        name: 'bool',
                        nodeType: 'ElementaryTypeName',
                        src: '8449:4:36',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool'
                        }
                      },
                      visibility: 'internal'
                    },
                    null
                  ],
                  id: 48471,
                  initialValue: {
                    arguments: [
                      {
                        hexValue: '',
                        id: 48469,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '8498:2:36',
                        typeDescriptions: {
                          typeIdentifier: 't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                          typeString: 'literal_string ""'
                        },
                        value: ''
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                          typeString: 'literal_string ""'
                        }
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                            typeString: 'literal_string ""'
                          }
                        ],
                        expression: {
                          expression: {
                            id: 48464,
                            name: 'msg',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: -15,
                            src: '8466:3:36',
                            typeDescriptions: {
                              typeIdentifier: 't_magic_message',
                              typeString: 'msg'
                            }
                          },
                          id: 48465,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: '8470:6:36',
                          memberName: 'sender',
                          nodeType: 'MemberAccess',
                          src: '8466:10:36',
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address'
                          }
                        },
                        id: 48466,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '8477:4:36',
                        memberName: 'call',
                        nodeType: 'MemberAccess',
                        src: '8466:15:36',
                        typeDescriptions: {
                          typeIdentifier: 't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$',
                          typeString: 'function (bytes memory) payable returns (bool,bytes memory)'
                        }
                      },
                      id: 48468,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      names: [ 'value' ],
                      nodeType: 'FunctionCallOptions',
                      options: [
                        {
                          id: 48467,
                          name: 'ammount',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 48445,
                          src: '8489:7:36',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256'
                          }
                        }
                      ],
                      src: '8466:31:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value',
                        typeString: 'function (bytes memory) payable returns (bool,bytes memory)'
                      }
                    },
                    id: 48470,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '8466:35:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$_t_bool_$_t_bytes_memory_ptr_$',
                      typeString: 'tuple(bool,bytes memory)'
                    }
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '8448:53:36'
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 48473,
                        name: 'success',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48463,
                        src: '8520:7:36',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool'
                        }
                      },
                      {
                        hexValue: '7472616e7366657274206661696c6c6564',
                        id: 48474,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '8529:19:36',
                        typeDescriptions: {
                          typeIdentifier: 't_stringliteral_6bedb9c3fc3fdcced62973d6893c883fff5a77f9c6e832051d9fe4f71c7a65e9',
                          typeString: 'literal_string "transfert failled"'
                        },
                        value: 'transfert failled'
                      }
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool'
                        },
                        {
                          typeIdentifier: 't_stringliteral_6bedb9c3fc3fdcced62973d6893c883fff5a77f9c6e832051d9fe4f71c7a65e9',
                          typeString: 'literal_string "transfert failled"'
                        }
                      ],
                      id: 48472,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [ -18, -18 ],
                      referencedDeclaration: -18,
                      src: '8511:7:36',
                      typeDescriptions: {
                        typeIdentifier: 't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure'
                      }
                    },
                    id: 48475,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '8511:38:36',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()'
                    }
                  },
                  id: 48476,
                  nodeType: 'ExpressionStatement',
                  src: '8511:38:36'
                }
              ]
            },
            documentation: {
              id: 48425,
              nodeType: 'StructuredDocumentation',
              src: '8062:146:36',
              text: '@notice allows supporters to withdraw his contribution.\n' +
                ' bidders can withdraw only when the contract is\n' +
                ' in progress or refused.'
            },
            functionSelector: '3ccfd60b',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'withdraw',
            nameLocation: '8222:8:36',
            parameters: {
              id: 48426,
              nodeType: 'ParameterList',
              parameters: [],
              src: '8230:2:36'
            },
            returnParameters: {
              id: 48427,
              nodeType: 'ParameterList',
              parameters: [],
              src: '8240:0:36'
            },
            scope: 48526,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48511,
            nodeType: 'FunctionDefinition',
            src: '8714:222:36',
            nodes: [],
            body: {
              id: 48510,
              nodeType: 'Block',
              src: '8764:172:36',
              nodes: [],
              statements: [
                {
                  expression: {
                    id: 48489,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 48486,
                      name: 'status',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48323,
                      src: '8774:6:36',
                      typeDescriptions: {
                        typeIdentifier: 't_enum$_ContractStatus_$48301',
                        typeString: 'enum ContractStatus'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      expression: {
                        id: 48487,
                        name: 'ContractStatus',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48301,
                        src: '8783:14:36',
                        typeDescriptions: {
                          typeIdentifier: 't_type$_t_enum$_ContractStatus_$48301_$',
                          typeString: 'type(enum ContractStatus)'
                        }
                      },
                      id: 48488,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      memberLocation: '8798:8:36',
                      memberName: 'Accepted',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 48299,
                      src: '8783:23:36',
                      typeDescriptions: {
                        typeIdentifier: 't_enum$_ContractStatus_$48301',
                        typeString: 'enum ContractStatus'
                      }
                    },
                    src: '8774:32:36',
                    typeDescriptions: {
                      typeIdentifier: 't_enum$_ContractStatus_$48301',
                      typeString: 'enum ContractStatus'
                    }
                  },
                  id: 48490,
                  nodeType: 'ExpressionStatement',
                  src: '8774:32:36'
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256'
                    },
                    id: 48493,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 48491,
                      name: 'totalBalance',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48316,
                      src: '8820:12:36',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256'
                      }
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      hexValue: '30',
                      id: 48492,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '8835:1:36',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0'
                      },
                      value: '0'
                    },
                    src: '8820:16:36',
                    typeDescriptions: { typeIdentifier: 't_bool', typeString: 'bool' }
                  },
                  id: 48509,
                  nodeType: 'IfStatement',
                  src: '8816:114:36',
                  trueBody: {
                    id: 48508,
                    nodeType: 'Block',
                    src: '8838:92:36',
                    statements: [
                      {
                        expression: {
                          id: 48496,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 48494,
                            name: 'totalBalance',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 48316,
                            src: '8852:12:36',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256'
                            }
                          },
                          nodeType: 'Assignment',
                          operator: '=',
                          rightHandSide: {
                            hexValue: '30',
                            id: 48495,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '8867:1:36',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_0_by_1',
                              typeString: 'int_const 0'
                            },
                            value: '0'
                          },
                          src: '8852:16:36',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256'
                          }
                        },
                        id: 48497,
                        nodeType: 'ExpressionStatement',
                        src: '8852:16:36'
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    id: 48503,
                                    name: 'this',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: -28,
                                    src: '8905:4:36',
                                    typeDescriptions: {
                                      typeIdentifier: 't_contract$_DerivativeProduct_$48526',
                                      typeString: 'contract DerivativeProduct'
                                    }
                                  }
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: 't_contract$_DerivativeProduct_$48526',
                                      typeString: 'contract DerivativeProduct'
                                    }
                                  ],
                                  id: 48502,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  nodeType: 'ElementaryTypeNameExpression',
                                  src: '8897:7:36',
                                  typeDescriptions: {
                                    typeIdentifier: 't_type$_t_address_$',
                                    typeString: 'type(address)'
                                  },
                                  typeName: {
                                    id: 48501,
                                    name: 'address',
                                    nodeType: 'ElementaryTypeName',
                                    src: '8897:7:36',
                                    typeDescriptions: {}
                                  }
                                },
                                id: 48504,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: 'typeConversion',
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: 'FunctionCall',
                                src: '8897:13:36',
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: 't_address',
                                  typeString: 'address'
                                }
                              },
                              id: 48505,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '8911:7:36',
                              memberName: 'balance',
                              nodeType: 'MemberAccess',
                              src: '8897:21:36',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256'
                              }
                            }
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256'
                              }
                            ],
                            expression: {
                              id: 48498,
                              name: 'owner',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 48307,
                              src: '8882:5:36',
                              typeDescriptions: {
                                typeIdentifier: 't_address_payable',
                                typeString: 'address payable'
                              }
                            },
                            id: 48500,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: '8888:8:36',
                            memberName: 'transfer',
                            nodeType: 'MemberAccess',
                            src: '8882:14:36',
                            typeDescriptions: {
                              typeIdentifier: 't_function_transfer_nonpayable$_t_uint256_$returns$__$',
                              typeString: 'function (uint256)'
                            }
                          },
                          id: 48506,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '8882:37:36',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$__$',
                            typeString: 'tuple()'
                          }
                        },
                        id: 48507,
                        nodeType: 'ExpressionStatement',
                        src: '8882:37:36'
                      }
                    ]
                  }
                }
              ]
            },
            documentation: {
              id: 48479,
              nodeType: 'StructuredDocumentation',
              src: '8562:147:36',
              text: '@notice call by the owner to accept the usage.\n' +
                ' if contribution was sent on the contract the ammount\n' +
                ' is transfered to the owner.'
            },
            functionSelector: '2852b71c',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 48482,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 48481,
                  name: 'onlyOwner',
                  nameLocations: [ '8739:9:36' ],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 48401,
                  src: '8739:9:36'
                },
                nodeType: 'ModifierInvocation',
                src: '8739:9:36'
              },
              {
                id: 48484,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 48483,
                  name: 'whenInProgress',
                  nameLocations: [ '8749:14:36' ],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 48388,
                  src: '8749:14:36'
                },
                nodeType: 'ModifierInvocation',
                src: '8749:14:36'
              }
            ],
            name: 'accept',
            nameLocation: '8723:6:36',
            parameters: {
              id: 48480,
              nodeType: 'ParameterList',
              parameters: [],
              src: '8729:2:36'
            },
            returnParameters: {
              id: 48485,
              nodeType: 'ParameterList',
              parameters: [],
              src: '8764:0:36'
            },
            scope: 48526,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public'
          },
          {
            id: 48525,
            nodeType: 'FunctionDefinition',
            src: '8997:98:36',
            nodes: [],
            body: {
              id: 48524,
              nodeType: 'Block',
              src: '9047:48:36',
              nodes: [],
              statements: [
                {
                  expression: {
                    id: 48522,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 48519,
                      name: 'status',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 48323,
                      src: '9057:6:36',
                      typeDescriptions: {
                        typeIdentifier: 't_enum$_ContractStatus_$48301',
                        typeString: 'enum ContractStatus'
                      }
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      expression: {
                        id: 48520,
                        name: 'ContractStatus',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 48301,
                        src: '9066:14:36',
                        typeDescriptions: {
                          typeIdentifier: 't_type$_t_enum$_ContractStatus_$48301_$',
                          typeString: 'type(enum ContractStatus)'
                        }
                      },
                      id: 48521,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      memberLocation: '9081:7:36',
                      memberName: 'Refused',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 48300,
                      src: '9066:22:36',
                      typeDescriptions: {
                        typeIdentifier: 't_enum$_ContractStatus_$48301',
                        typeString: 'enum ContractStatus'
                      }
                    },
                    src: '9057:31:36',
                    typeDescriptions: {
                      typeIdentifier: 't_enum$_ContractStatus_$48301',
                      typeString: 'enum ContractStatus'
                    }
                  },
                  id: 48523,
                  nodeType: 'ExpressionStatement',
                  src: '9057:31:36'
                }
              ]
            },
            documentation: {
              id: 48512,
              nodeType: 'StructuredDocumentation',
              src: '8942:50:36',
              text: '@notice call by the owner to refuse the usage.'
            },
            functionSelector: '62c69b80',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 48515,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 48514,
                  name: 'onlyOwner',
                  nameLocations: [ '9022:9:36' ],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 48401,
                  src: '9022:9:36'
                },
                nodeType: 'ModifierInvocation',
                src: '9022:9:36'
              },
              {
                id: 48517,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 48516,
                  name: 'whenInProgress',
                  nameLocations: [ '9032:14:36' ],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 48388,
                  src: '9032:14:36'
                },
                nodeType: 'ModifierInvocation',
                src: '9032:14:36'
              }
            ],
            name: 'refuse',
            nameLocation: '9006:6:36',
            parameters: {
              id: 48513,
              nodeType: 'ParameterList',
              parameters: [],
              src: '9012:2:36'
            },
            returnParameters: {
              id: 48518,
              nodeType: 'ParameterList',
              parameters: [],
              src: '9047:0:36'
            },
            scope: 48526,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public'
          }
        ],
        abstract: false,
        baseContracts: [],
        canonicalName: 'DerivativeProduct',
        contractDependencies: [],
        contractKind: 'contract',
        fullyImplemented: true,
        linearizedBaseContracts: [ 48526 ],
        name: 'DerivativeProduct',
        nameLocation: '6647:17:36',
        scope: 48527,
        usedErrors: [],
        usedEvents: []
      }
    ],
    license: 'MIT'
  },
  id: 36
}

export default cryptoStampData;